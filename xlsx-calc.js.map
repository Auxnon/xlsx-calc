{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/RawValue.js","webpack:///./src/int_2_col_str.js","webpack:///./src/col_str_2_int.js","webpack:///./src/Range.js","webpack:///./src/getSanitizedSheetName.js","webpack:///./src/str_2_val.js","webpack:///./src/RefValue.js","webpack:///./src/find_all_cells_with_formulas.js","webpack:///./src/index.js","webpack:///./src/exec_formula.js","webpack:///./src/expression_builder.js","webpack:///./src/Exp.js","webpack:///./src/LazyValue.js","webpack:///./src/UserFnExecutor.js","webpack:///./src/UserRawFnExecutor.js","webpack:///./src/formulas.js","webpack:///./src/formulas-raw.js","webpack:///./src/Calculator.js"],"names":["root","factory","exports","module","define","amd","a","i","this","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","setValue","v","calc","modulo","dividend","columnName","guard","String","fromCharCode","col_str","colstr","replace","length","Math","pow","charCodeAt","col_str_2_int","int_2_col_str","getSanitizedSheetName","str_expression","formula","range_expression","sheet_name","sheet","indexOf","aux","split","wb","Sheets","max_row","arr","min_row","parseInt","str_max_row","min_col","max_col","matrix","row","push","j","cell_name","cell_full_name","formula_ref","status","exec_formula","cell","f","includes","Error","quotedMatch","match","RawValue","RefValue","LazyValue","Range","definedNames","getDefinedName","buffer","Workbook","Names","keys","values","forEach","Name","Ref","str_2_val","isNaN","trim","inner","substr","self","parseRef","resolved_ref","ref_cell","console","log","w","cells","find_all_cells_with_formulas","Calculator","mymodule","workbook","options","formulas","error","continue_after_error","log_error","calculator","set_fx","exec_fx","import_functions","import_raw_functions","xlsx_Fx","localizeFunctions","XLSX_CALC","expression_builder","xlsx_raw_Fx","functions","opts","formulajs","prefix","obj","override","my_assign","dest","source","JSON","parse","stringify","k","build_expression","update_cell_value","fn","args","apply","dic","newName","oldName","Exp","UserFnExecutor","UserRawFnExecutor","common_operations","root_exp","str_formula","exp_obj","was_string","fn_stack","exp","string","char","state","start","single_quote","stack","trim_buffer","special","special_raw","ini_parentheses","pop","add_operation","exp_id","last_arg","getCellLetter","columnIndex","newCellLetter","newLetterIndex","floor","getCellType","cellValue","isEmpty","checkVariable","getCurrentCellIndex","exec","op","splice","b","Array","isArray","e","id","array","result","validateResultMatrix","existingCell","existingCellLetter","existingCellNumber","newCellNumber","newCellValue","newCellType","newCell","errorValues","undefined","message","concat","Date","exec_minus","getTime","toLowerCase","user_function","map","abs","sqrt","return_index","range_lookup","val","max","arguments","arg","col","sum","min","rate_per_period","number_of_payments","present_value","future_value","type","q","counta","range","guess","guest","NPV","normsInv","getArrayOfNumbers","_mean","reduce","mean","dev","itm","avg","E","var_p","covariance_p","is_blank","needle","table","index","exactmatch","searchingFor","row_num","column_num","lookupValue","matchType","match_exactly_string","match_exactly_non_string","match_less_than_or_equal","match_greater_than_or_equal","parseNumber","parseFloat","consistentSizeRanges","matrixArray","getRowCount","getColCount","rowCount","colCount","product","_i","_ij","arrays","x","today","setHours","hours","minutes","seconds","date","getDate","day","getMonth","month","getFullYear","year","text","number","substring","cond","decimalPlaces","round","roundMeasure","inv_n","avg_a","avg_b","sa","sb","elementToSum","sumResult","slice","elt","toString","option","old_text","new_text","occurrence","RegExp","significance","ceil","indexValue","idx","average","mu","sigma","Infinity","cell_ref","rows","columns","height","width","ref_value","parsed_ref","end_range_col","onerrorvalue","condition","_then","_else","expressionWithRange","colRow","colNumber","rowNumber","matrixRow","destinationColumn","destinationRow","data","conditions","cellName","colAndRow","returnValue","destinationCellName","expressions","variables","calcNames","var_name","variable","setVarOfExpression","vars","item","getRef","ref_name"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,MAAM,WACT,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUT,QAGnC,IAAIC,EAASM,EAAiBE,GAAY,CACzCJ,EAAGI,EACHC,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQF,GAAUG,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAQ,EAAoBK,EAAIF,EAGxBH,EAAoBM,EAAIP,EAGxBC,EAAoBO,EAAI,SAASf,EAASgB,EAAMC,GAC3CT,EAAoBU,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhET,EAAoBe,EAAI,SAASvB,GACX,oBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBO,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAO,EAAoBO,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRT,EAAoBU,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG5B,EAAoB+B,EAAI,GAIjB/B,EAAoBA,EAAoBgC,EAAI,G,+BChFrDvC,EAAOD,QAAU,SAAkB0B,GAC/BpB,KAAKmC,SAAW,SAASC,GACrBhB,EAAQgB,GAEZpC,KAAKqC,KAAO,WACR,OAAOjB,K,6BCLfzB,EAAOD,QAAU,SAAuBkC,GAKpC,IAJA,IAEIU,EAFAC,EAAWX,EAAI,EACfY,EAAa,GAEbC,EAAQ,GACLF,EAAW,GAAKE,KACnBH,GAAUC,EAAW,GAAK,GAC1BC,EAAaE,OAAOC,aAAaL,EAAS,IAAME,EAChDD,GAAYA,EAAWD,EAAS,GAAK,GAEzC,OAAOE,I,6BCVX7C,EAAOD,QAAU,SAAuBkD,GAGpC,IAFA,IAAI3B,EAAI,EACJ4B,EAASD,EAAQE,QAAQ,UAAW,IAC/B/C,EAAI8C,EAAOE,OAAQhD,KACxBkB,GAAK+B,KAAKC,IAAI,GAAIJ,EAAOE,OAAShD,EAAI,IAAM8C,EAAOK,WAAWnD,GAAK,IAEvE,OAAOkB,EAAI,I,6BCNf,MAAMkC,EAAgB,EAAQ,GACxBC,EAAgB,EAAQ,GACxBC,EAAwB,EAAQ,GAEtC1D,EAAOD,QAAU,SAAe4D,EAAgBC,GAC5CvD,KAAKqC,KAAO,WACR,IAAImB,EAAkBC,EAAYC,EAClC,IAAoC,GAAhCJ,EAAeK,QAAQ,KAAY,CACnC,IAAIC,EAAMN,EAAeO,MAAM,KAC/BJ,EAAaJ,EAAsBO,EAAI,IACvCJ,EAAmBI,EAAI,QAGvBH,EAAaF,EAAQE,WACrBD,EAAmBF,EAEvBI,EAAQH,EAAQO,GAAGC,OAAON,GAC1B,IAGIO,EAHAC,EAAMT,EAAiBK,MAAM,KAC7BK,EAAUC,SAASF,EAAI,GAAGnB,QAAQ,UAAW,IAAK,KAAO,EACzDsB,EAAcH,EAAI,GAAGnB,QAAQ,UAAW,IAExB,KAAhBsB,GAAsBV,EAAM,UAC5BU,EAAcV,EAAM,QAAQG,MAAM,KAAK,GAAGf,QAAQ,UAAW,KAGjEkB,EAAUG,SAAwB,IAAfC,EAAoB,SAAWA,EAAa,IAI/D,IAHA,IAAIC,EAAUlB,EAAcc,EAAI,IAC5BK,EAAUnB,EAAcc,EAAI,IAC5BM,EAAS,GACJxE,EAAImE,EAASnE,GAAKiE,EAASjE,IAAK,CACrC,IAAIyE,EAAM,GACVD,EAAOE,KAAKD,GACZ,IAAK,IAAIE,EAAIL,EAASK,GAAKJ,EAASI,IAAK,CACrC,IAAIC,EAAYvB,EAAcsB,GAAK3E,EAC/B6E,EAAiBnB,EAAa,IAAMkB,EACpCE,EAActB,EAAQsB,YAAYD,GACtC,GAAIC,EAAa,CACb,GAA2B,QAAvBA,EAAYC,OACZvB,EAAQwB,aAAaF,QAClB,GAA2B,YAAvBA,EAAYC,OAAsB,CACzC,GAAID,EAAYG,KAAKC,EAAEC,SAAS3B,EAAQ7C,MACpC,MAAM,IAAIyE,MAAM,gBAEpB5B,EAAQwB,aAAaF,GAEE,MAAvBnB,EAAMiB,GAAWtD,EACjBmD,EAAIC,KAAKf,EAAMiB,IAGfH,EAAIC,KAAKf,EAAMiB,GAAWvC,QAGzBsB,EAAMiB,GACgB,MAAvBjB,EAAMiB,GAAWtD,EACjBmD,EAAIC,KAAKf,EAAMiB,IAGfH,EAAIC,KAAKf,EAAMiB,GAAWvC,GAI9BoC,EAAIC,KAAK,OAIrB,OAAOF,K,6BCjEf5E,EAAOD,QAAU,SAA+B+D,GAC5C,IAAI2B,EAAc3B,EAAW4B,MAAM,YACnC,OAAID,EACOA,EAAY,GAGZ3B,I,gBCRf,MAAM6B,EAAW,EAAQ,GACnBC,EAAW,EAAQ,GACnBC,EAAY,EAAQ,IACpBC,EAAQ,EAAQ,GAItB,IAAIC,EAAc5B,EAClB,SAAS6B,EAAeC,EAAQrC,GAC5B,IAAMA,EAAQO,GAAG+B,WAAYtC,EAAQO,GAAG+B,SAASC,MAC7C,OAAO,KAEX,GAAIhC,IAAOP,EAAQO,GAGf,OAFAA,EAAKP,EAAQO,GACb4B,EAAe,KACRC,EAAeC,EAAQrC,GAElC,GAAImC,EACA,OAAOA,EAAaE,GAExB,MAAMG,EAAOlF,OAAOmF,OAAOzC,EAAQO,GAAG+B,SAASC,OAC/C,OAAoB,IAAhBC,EAAKhD,QAGT2C,EAAe,GACfK,EAAKE,QAAQ,EAAGC,OAAMC,UACbD,EAAKhB,SAAS,OACfQ,EAAaQ,GAAQC,KAItBR,EAAeC,EAAQrC,SAV9B,EAaJ5D,EAAOD,QAAU,SAAS0G,EAAUR,EAAQrC,GACxC,IAAK8C,MAAMT,GACP,OAAO,IAAIN,GAAUM,GAEzB,GAAe,SAAXA,EACA,OAAO,IAAIN,EAAS,GAExB,GAAsB,iBAAXM,EACP,OAAOA,EAKX,IAFAA,EAASA,EAAOU,OAAOxD,QAAQ,MAAO,KAE3BuC,MAAM,+BACb,OAAO,IAAII,EAAMG,EAAQrC,GAE7B,GAAIqC,EAAOP,MAAM,qCACb,OAAO,IAAII,EAAMG,EAAQrC,GAE7B,GAAIqC,EAAOP,MAAM,mBACb,OAAO,IAAII,EAAMG,EAAQrC,GAE7B,GAAIqC,EAAOP,MAAM,yBACb,OAAO,IAAII,EAAMG,EAAQrC,GAE7B,GAAIqC,EAAOP,MAAM,kBACb,OAAO,IAAIE,EAASK,EAAQrC,GAEhC,GAAIqC,EAAOP,MAAM,wBACb,OAAO,IAAIE,EAASK,EAAQrC,GAEhC,GAAIqC,EAAOP,MAAM,MAAO,CACpB,IAAIkB,EAAQH,EAAUR,EAAOY,OAAO,EAAGZ,EAAO7C,OAAO,GAAIQ,GACzD,OAAO,IAAIiC,EAAU,IAAMe,EAAMlE,OAAS,KAE9C,OAAIsD,EAAeC,EAAQrC,GAChB6C,EAAUT,EAAeC,EAAQrC,GAAUA,GAE/CqC,I,6BCtEX,MAAMvC,EAAwB,EAAQ,GAEtC1D,EAAOD,QAAU,SAAkB4D,EAAgBC,GAC/C,IAAIkD,EAAOzG,KACXA,KAAKU,KAAO,WACZV,KAAKsD,eAAiBA,EACtBtD,KAAKuD,QAAUA,EAEfkD,EAAKC,SAAW,WACZ,IAAIhD,EAAOD,EAAYkB,EACvB,IAAoC,GAAhCrB,EAAeK,QAAQ,KAAY,CACnC,IAAIC,EAAMN,EAAeO,MAAM,KAC/BJ,EAAaJ,EAAsBO,EAAI,IACvCF,EAAQH,EAAQO,GAAGC,OAAON,GAC1BkB,EAAYf,EAAI,QAGhBF,EAAQH,EAAQG,MAChBD,EAAaF,EAAQE,WACrBkB,EAAYrB,EAEhB,IAAKI,EACD,MAAMyB,MAAM,SAAW1B,EAAa,eAGxC,MAAO,CACHC,MAAOA,EACPD,WAAYA,EACZkB,UAAWA,EACXC,eALanB,EAAa,IAAMkB,IASxC3E,KAAKqC,KAAO,WACR,IAAIsE,EAAeF,EAAKC,WACpBhD,EAAQiD,EAAajD,MACrBiB,EAAYgC,EAAahC,UACzBC,EAAiB+B,EAAa/B,eAC9BgC,EAAWlD,EAAMiB,GACrB,IAAKiC,EACD,OAAO,KAEX,IAAI/B,EAActB,EAAQsB,YAAYD,GACtC,IAAIC,EAwBC,CACD,GAAmB,MAAf+B,EAASvF,EAET,MADAwF,QAAQC,IAAI,kCAAmCnC,GACzC,IAAIQ,MAAMyB,EAASG,GAE7B,OAAOH,EAASxE,EA5BhB,GAA2B,QAAvByC,EAAYC,OAAkB,CAE9B,GADAvB,EAAQwB,aAAaF,GACF,MAAf+B,EAASvF,EAET,MADAwF,QAAQC,IAAI,mCAAoClC,EAAgBgC,EAASG,GACnE,IAAI5B,MAAMyB,EAASG,GAE7B,OAAOH,EAASxE,EAEf,GAA2B,YAAvByC,EAAYC,OAAsB,CACvC,GAAI8B,EAAS3B,EAAEC,SAAS3B,EAAQ7C,MAC5B,MAAM,IAAIyE,MAAM,gBAGpB,OADA5B,EAAQwB,aAAaF,GACd7E,KAAKqC,OAEX,GAA2B,SAAvBwC,EAAYC,OAAmB,CACpC,GAAmB,MAAf8B,EAASvF,EAET,MADAwF,QAAQC,IAAI,qCAAsClC,EAAgBgC,EAASG,GACrE,IAAI5B,MAAMyB,EAASG,GAE7B,OAAOH,EAASxE,M,6BChEhCzC,EAAOD,QAAU,SAAsCoE,EAAIiB,GACvD,IAAIF,EAAc,GACdmC,EAAQ,GACZ,IAAK,IAAIvD,KAAcK,EAAGC,OAAQ,CAC9B,IAAIL,EAAQI,EAAGC,OAAON,GACtB,IAAK,IAAIkB,KAAajB,EAClB,GAAIA,EAAMiB,IAAcjB,EAAMiB,GAAWM,EAAG,CACxC,IAAI1B,EAAUsB,EAAYpB,EAAa,IAAMkB,GAAa,CACtDE,YAAaA,EACbf,GAAIA,EACJJ,MAAOA,EACPD,WAAYA,EACZuB,KAAMtB,EAAMiB,GACZjE,KAAMiE,EACNG,OAAQ,MACRC,aAAcA,GAElBiC,EAAMvC,KAAKlB,IAIvB,OAAOyD,I,6BCrBX,MAAM5D,EAAgB,EAAQ,GACxBD,EAAgB,EAAQ,GACxB4B,EAAe,EAAQ,GACvBkC,EAA+B,EAAQ,GACvCC,EAAa,EAAQ,IAE3B,IAAIC,EAAW,SAASC,EAAUC,GAE9B,IADA,IAAIC,EAAWL,EAA6BG,EAAUrC,GAC7ChF,EAAIuH,EAASvE,OAAS,EAAGhD,GAAK,EAAGA,IACxC,IACEgF,EAAauC,EAASvH,IACtB,MAAOwH,GACP,IAAKF,IAAYA,EAAQG,qBACvB,MAAMD,EAEJF,EAAQI,WACVZ,QAAQC,IAAI,0BAA2B,QAASQ,EAASvH,GAAG0D,WAAY,OAAQ6D,EAASvH,GAAGW,KAAM6G,KAM5GJ,EAASO,WAAa,SAAoBN,GACtC,OAAO,IAAIF,EAAWE,EAAUrC,IAGpCoC,EAASQ,OAAS5C,EAAa4C,OAC/BR,EAASS,QAAU7C,EAAa6C,QAChCT,EAAShE,cAAgBA,EACzBgE,EAAS/D,cAAgBA,EACzB+D,EAASU,iBAAmB9C,EAAa8C,iBACzCV,EAASW,qBAAuB/C,EAAa+C,qBAC7CX,EAASY,QAAUhD,EAAagD,QAChCZ,EAASa,kBAAoBjD,EAAaiD,kBAE1Cb,EAASc,UAAYd,EAErBxH,EAAOD,QAAUyH,G,6BCrCjB,MAAMe,EAAqB,EAAQ,IAEnC,IAAIH,EAAU,GACVI,EAAc,GAKlB,SAASL,EAAqBM,EAAWC,GACrC,IAAK,IAAI3G,KAAO0G,EACZD,EAAYzG,GAAO0G,EAAU1G,GAIrC,SAASmG,EAAiBS,EAAWD,GAEjC,IAAIE,GADJF,EAAOA,GAAQ,IACGE,QAAU,GAC5B,IAAK,IAAI7G,KAAO4G,EAAW,CACvB,IAAIE,EAAMF,EAAU5G,GACA,mBAAV,GACF2G,EAAKI,UAAaV,EAAQQ,EAAS7G,KACnCqG,EAAQQ,EAAS7G,GAAO8G,GAQP,iBAAV,GACXX,EAAiBW,EAAKE,EAAUL,EAAM,CAAEE,OAAQ7G,EAAM,QAKlE,SAASgH,EAAUC,EAAMC,GACrB,IAAIJ,EAAMK,KAAKC,MAAMD,KAAKE,UAAUJ,IACpC,IAAK,IAAIK,KAAKJ,EACVJ,EAAIQ,GAAKJ,EAAOI,GAEpB,OAAOR,EAGX,SAASS,EAAiB1F,GACtB,OAAO2E,EAAmB3E,EAAS,CAACwE,QAASA,EAASI,YAAaA,IAGvE,SAASpD,EAAaxB,GACH0F,EAAiB1F,GACvB2F,oBA5CbrB,EAAiB,EAAQ,KACzBC,EAAqB,EAAQ,KA8C7B/C,EAAa4C,OAAS,SAAgBjH,EAAMyI,GACxCpB,EAAQrH,GAAQyI,GAGpBpE,EAAa6C,QAAU,SAAiBlH,EAAM0I,GAC1C,OAAOrB,EAAQrH,GAAM2I,MAAMrJ,KAAMoJ,IAGrCrE,EAAaiD,kBAAoB,SAASsB,GACtC,IAAK,IAAIC,KAAWD,EAAK,CACrB,IAAIE,EAAUF,EAAIC,GACdxB,EAAQyB,KACRzB,EAAQwB,GAAWxB,EAAQyB,IAE3BrB,EAAYqB,KACZrB,EAAYoB,GAAWpB,EAAYqB,MAK/CzE,EAAa8C,iBAAmBA,EAChC9C,EAAa+C,qBAAuBA,EACpC/C,EAAakE,iBAAmBA,EAChClE,EAAagD,QAAUA,EACvBpI,EAAOD,QAAUqF,G,gBC9EjB,MAAM0E,EAAM,EAAQ,IACdnE,EAAW,EAAQ,GACnBoE,EAAiB,EAAQ,IACzBC,EAAoB,EAAQ,IAC5BC,EAAoB,CACtB,IAAK,WACL,IAAK,OACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,KACL,IAAK,KACL,IAAK,MAGTjK,EAAOD,QAAU,SAA4B6D,EAAS8E,GAClD9E,EAAQuB,OAAS,UAEjB,IAGI+E,EAHA9B,EAAUM,EAAKN,SAAW,GAC1BI,EAAcE,EAAKF,aAAe,GAGlC2B,EAAcvG,EAAQyB,KAAKC,EACT,KAAlB6E,EAAY,KACZA,EAAcA,EAAYtD,OAAO,IAErC,IAAIuD,EAAUF,EAAW,IAAIJ,EAAIlG,GAC7BqC,EAAS,GACToE,GAAa,EACbC,EAAW,CAAC,CACZC,IAAKH,IAMT,SAASI,EAAOC,GACC,MAATA,GACAL,EAAQtF,KAAK,IAAIa,EAASM,IAC1BoE,GAAa,EACbpE,EAAS,GACTyE,EAAQC,GAER1E,GAAUwE,EAIlB,SAASG,EAAaH,GACL,MAATA,IACAC,EAAQC,GAEZ1E,GAAUwE,EAmDd,SAASE,EAAMF,GAzBf,IACQhI,EAAGoI,EAyBM,MAATJ,GACAC,EAAQF,EACRvE,EAAS,IACO,MAATwE,GACPC,EAAQE,EACR3E,EAAS,KACO,MAATwE,EAvDf,WACI,IAAIxJ,EAAG6J,EAAc7E,EAAOU,OACxBoE,EAAU3C,EAAQ0C,GAClBE,EAAcxC,EAAYsC,GAC9B,GAAIE,EACAD,EAAU,IAAIf,EAAkBgB,EAAapH,QAE5C,GAAImH,EACLA,EAAU,IAAIhB,EAAegB,EAASnH,QAErC,GAAIkH,EAEL,MAAM,IAAItF,MAAM,IAAM5B,EAAQE,WAAa,KAAOF,EAAQ7C,KAAO,cAAgBkF,EAAS,cAE9FhF,EAAI,IAAI6I,EAAIlG,GACZ0G,EAASxF,KAAK,CACVyF,IAAKtJ,EACL8J,QAASA,IAEbX,EAAUnJ,EACVgF,EAAS,GAoCLgF,GACgB,MAATR,GAjCJI,EAAQP,EAASY,OACxBd,EAAUS,EAAMN,KACRzF,KAAKmB,GACbxD,EAAI2H,EACJnE,EAAS,GACTmE,EAAUE,EAASA,EAASlH,OAAS,GAAGmH,IACpCM,EAAME,SACNF,EAAME,QAAQjG,KAAKrC,GACnB2H,EAAQtF,KAAK+F,EAAME,UAGnBX,EAAQtF,KAAKrC,IAwBNwH,EAAkBQ,GApBjC,SAAuBA,GACdJ,GACDD,EAAQtF,KAAKmB,GAEjBoE,GAAa,EACbD,EAAQtF,KAAK2F,GACbxE,EAAS,GAeLkF,CAAcV,GACE,MAATA,GAAgBH,EAASA,EAASlH,OAAS,GAAG2H,SACrDV,GAAa,EACbC,EAASA,EAASlH,OAAS,GAAGmH,IAAIzF,KAAKmB,GACvCqE,EAASA,EAASlH,OAAS,GAAG2H,QAAQjG,KAAKwF,EAASA,EAASlH,OAAS,GAAGmH,KACzED,EAASA,EAASlH,OAAS,GAAGmH,IAAMH,EAAU,IAAIN,EAAIlG,GACtDqC,EAAS,IACO,MAATwE,IACPxE,GAAUwE,GAMlB,IAFA,IAAIC,EAAQC,EAEHvK,EAAI,EAAGA,EAAI+J,EAAY/G,OAAQhD,IACpCsK,EAAMP,EAAY/J,IAGtB,OADA8J,EAASpF,KAAKmB,GACPiE,I,6BCnIX,MAAMvE,EAAW,EAAQ,GACnBG,EAAQ,EAAQ,GAChBW,EAAY,EAAQ,GAI1B,IAAI2E,EAAS,EAEbpL,EAAOD,QAAU,SAAa6D,GAC1B,IAmQIyH,EAnQAvE,EAAOzG,KA+EX,SAASiL,EAAcC,GACnB,IAAIC,EAAgB,GACpB,KAAOC,gBAAkB,GACrBD,EAAgB,6BAA6BC,eAAiB,IAAMD,EACpEC,eAAiBpI,KAAKqI,MAAMD,eAAiB,IAAM,EAI3D,SAASE,EAAYC,GACjB,MAA0B,iBAAhB,EACC,IAEoB,iBAAhB,EACJ,SADN,EAqBT,SAASC,EAAQpK,GACb,OAAOA,SAAmD,KAAVA,EAGpD,SAASqK,EAAcjD,GACnB,GAAwB,mBAAbA,EAAInG,KACX,MAAM,IAAI8C,MAAM,aAAeqD,GAIvC,SAASkD,IACL,OAAQjF,EAAKlD,QAAQ7C,KAAKoC,QAAQ,UAAW,IAGjD,SAAS6I,EAAKC,EAAIxC,EAAMD,GACpB,IAAK,IAAIpJ,EAAI,EAAGA,EAAIqJ,EAAKrG,OAAQhD,IAC7B,GAAIqJ,EAAKrJ,KAAO6L,EACZ,IACI,GAAQ,IAAJ7L,GAAc,MAAL6L,EAAU,CACnBH,EAAcrC,EAAKrJ,EAAI,IACvB,IAAIkB,EAAImI,EAAKrJ,EAAI,GAAGsC,OACpB+G,EAAKyC,OAAO9L,EAAG,EAAG,IAAIuF,EAASrE,QAC5B,CACHwK,EAAcrC,EAAKrJ,EAAI,IACvB0L,EAAcrC,EAAKrJ,EAAI,IAEvB,IAAID,EAAIsJ,EAAKrJ,EAAI,GAAGsC,OAChByJ,EAAI1C,EAAKrJ,EAAI,GAAGsC,OAChB0J,MAAMC,QAAQlM,KACdA,EAAIA,EAAE4L,IAAwB,GAAG,IAEjCK,MAAMC,QAAQF,KACdA,EAAIA,EAAEJ,IAAwB,GAAG,IAGrC,IAAIzK,EAAIkI,EAAGrJ,EAAGgM,GACd1C,EAAKyC,OAAO9L,EAAI,EAAG,EAAG,IAAIuF,EAASrE,IACnClB,KAGR,MAAOkM,GAEH,MAAMA,GAzJtBxF,EAAKyF,KAAOnB,EACZtE,EAAK2C,KAAO,GACZ3C,EAAK/F,KAAO,aACZ+F,EAAKyC,kBAGL,WACI,IACI,GAAI6C,MAAMC,QAAQvF,EAAK2C,OACS,IAArB3C,EAAK2C,KAAKrG,QACV0D,EAAK2C,KAAK,aAAc3D,EAC/B,MAAMN,MAAM,WAKhB,GAHA5B,EAAQyB,KAAK5C,EAAIqE,EAAKpE,OACtBkB,EAAQyB,KAAK3D,EAAIiK,EAAY/H,EAAQyB,KAAK5C,GAEtC2J,MAAMC,QAAQzI,EAAQyB,KAAK5C,GAAI,CAC/B,MAAM+J,EAAQ5I,EAAQyB,KAAK5C,EAC3B,IA6EZ,SAA8BgK,GAE1B,GAAIL,MAAMC,QAAQI,GACd,IAAK,IAAIrM,EAAI,EAAGA,EAAIqM,EAAOrJ,OAAQhD,IAAK,CACpC,KAAMqM,EAAOrM,aAAcgM,OACvB,OAAO,EAEX,GAAIK,EAAOrM,GAAGgD,SAAWqJ,EAAO,GAAGrJ,OAC/B,OAAO,EAKnB,OAAO,EA1FMsJ,CAAqBF,GACtB,MAAM,IAAIhH,MAAM,QAGpB,MAAMmH,EAAe/I,EAAQyB,KAAKtE,KAC5B6L,EAAqBD,EAAajH,MAAM,UAAU,GAClDmH,EAAqBF,EAAajH,MAAM,UAAU,GAExD,IAAK,IAAItF,EAAI,EAAGA,EAAIoM,EAAMpJ,OAAQhD,IAAK,CACnC,MAAM0M,EAAgBtI,SAASqI,GAAsBzM,EAErD,IAAK,IAAI2E,EAAI,EAAGA,EAAIyH,EAAMpM,GAAGgD,OAAQ2B,IAAK,CACtC,MAAMgI,EAAeP,EAAMpM,GAAG2E,GAC9B,IAAIiI,EAAcrB,EAAYoB,GAG9B,GAAU,IAAN3M,GAAiB,IAAN2E,EACXnB,EAAQyB,KAAK5C,EAAIsK,EACbC,IAAapJ,EAAQyB,KAAK3D,EAAIsL,OAGjC,CACD,MAAMvB,EAAiBmB,EAAmBrJ,WAAW,GAAK,GAAKwB,EAGzDkI,EAFgB3B,EAAcG,GAEJqB,EAChClJ,EAAQG,MAAMkJ,GAAW,CACrBxK,EAAGsK,EACHrL,EAAGsL,OAO3B,MAAOV,GACH,IAAIY,EAAc,CACd,SAAU,EACV,UAAW,EACX,UAAW,GACX,QAAS,GACT,SAAU,GACV,QAAS,GACT,OAAQ,GACR,gBAAiB,IAErB,QAA+BC,IAA3BD,EAAYZ,EAAEc,SAMd,MAAMd,EALN1I,EAAQyB,KAAK3D,EAAI,IACjBkC,EAAQyB,KAAK+B,EAAIkF,EAAEc,QACnBxJ,EAAQyB,KAAK5C,EAAIyK,EAAYZ,EAAEc,SAMvC,QACIxJ,EAAQuB,OAAS,SAtEzB2B,EAAKlD,QAAUA,EAwLfkD,EAAKpE,KAAO,WACR,IAAI+G,EAAO3C,EAAK2C,KAAK4D,SA2DrB,GA1DArB,EAAK,IAAKvC,GAAM,SAAStJ,EAAGgM,GACxB,OAAO9I,KAAKC,KAAKnD,GAAIgM,MAhC7B,SAAoB1C,GAChB,IAAK,IAAIrJ,EAAIqJ,EAAKrG,OAAQhD,KACtB,GAAgB,MAAZqJ,EAAKrJ,GAAY,CACjB0L,EAAcrC,EAAKrJ,EAAI,IACvB,IAAI+L,EAAI1C,EAAKrJ,EAAI,GAAGsC,OACpB,GAAItC,EAAI,GAA4B,iBAAhBqJ,EAAKrJ,EAAI,GAAiB,CAE1C,GADAqJ,EAAKyC,OAAO9L,EAAG,EAAG,KACd+L,aAAamB,KAAM,CACnBnB,EAAImB,KAAKnE,MAAMgD,GACfL,EAAcrC,EAAKrJ,EAAI,IACvB,IAAID,EAAIsJ,EAAKrJ,EAAI,GAAGsC,OAChBvC,aAAamN,OACbnN,EAAImN,KAAKnE,MAAMhJ,GAjLxB,MAkLSgM,GAlLT,MAmLS1C,EAAKyC,OAAO9L,EAAI,EAAG,EAAG,IAAIuF,EAASxF,KAG3CsJ,EAAKyC,OAAO9L,EAAI,EAAG,EAAG,IAAIuF,GAAUwG,QAEnC,CACD,GAAiB,iBAANA,EACP,MAAM,IAAI3G,MAAM,WAEpBiE,EAAKyC,OAAO9L,EAAG,EAAG,IAAIuF,GAAUwG,MAW5CoB,CAAW9D,GACXuC,EAAK,IAAKvC,GAAM,SAAStJ,EAAGgM,GACxB,GAAS,GAALA,EACA,MAAM3G,MAAM,WAEhB,OAASrF,GAAOgM,KAEpBH,EAAK,IAAKvC,GAAM,SAAStJ,EAAGgM,GACxB,OAAShM,GAAOgM,KAEpBH,EAAK,IAAKvC,GAAM,SAAStJ,EAAGgM,GAIxB,OAHIhM,aAAamN,MAAqB,iBAANnB,IAC5BA,GAnNG,QAqNEhM,IAAOgM,KAEpBH,EAAK,IAAKvC,GAAM,SAAStJ,EAAGgM,GACxB,MAAO,GAAKhM,EAAIgM,KAEpBH,EAAK,IAAKvC,GAAM,SAAStJ,EAAGgM,GACxB,OAAOhM,EAAIgM,KAEfH,EAAK,IAAKvC,GAAM,SAAStJ,EAAGgM,GACxB,OAAOhM,EAAIgM,KAEfH,EAAK,KAAMvC,GAAM,SAAStJ,EAAGgM,GACzB,OAAOhM,GAAKgM,KAEhBH,EAAK,KAAMvC,GAAM,SAAStJ,EAAGgM,GACzB,OAAOhM,GAAKgM,KAEhBH,EAAK,KAAMvC,GAAM,SAAStJ,EAAGgM,GACzB,OAAIhM,aAAamN,MAAQnB,aAAamB,KAC3BnN,EAAEqN,YAAcrB,EAAEqB,YAEzB3B,EAAQ1L,KAAM0L,EAAQM,KAGnBhM,IAAMgM,KAEjBH,EAAK,IAAKvC,GAAM,SAAStJ,EAAGgM,GACxB,OAAIhM,aAAamN,MAAQnB,aAAamB,KAC3BnN,EAAEqN,YAAcrB,EAAEqB,aAEzB3B,EAAQ1L,KAAM0L,EAAQM,MAGhB,MAALhM,GAAmB,IAANgM,GAAmB,IAANhM,GAAgB,MAALgM,IAGzB,iBAANhM,GAA+B,iBAANgM,GAAkBhM,EAAEsN,gBAAkBtB,EAAEsB,eAGrEtN,IAAMgM,OAEE,GAAf1C,EAAKrG,OACL,MAA6B,mBAAlBqG,EAAK,GAAO,KACZA,EAAK,GAGLA,EAAK,GAAG/G,QAM3BoE,EAAKhC,KAAO,SAASmB,GACjB,GAAIA,EAAQ,CACR,IAAIxD,EAAIgE,EAAUR,EAAQrC,GACd,MAANnB,IAA2B,KAAZ4I,GAA+B,KAAZA,IAAkC,KAAZA,GAAyB,MAAN5I,EAC7EqE,EAAK2C,KAAK3C,EAAK2C,KAAKrG,OAAS,IAAMX,EAGnCqE,EAAK2C,KAAK3E,KAAKrC,GAEnB4I,EAAW5I,M,6BCtRvBzC,EAAOD,QAAU,SAAmByJ,GAChCnJ,KAAKqC,KAAO,WACR,OAAO8G,O,6BCFfxJ,EAAOD,QAAU,SAAwB2N,GACrC,IAAI5G,EAAOzG,KACXyG,EAAK/F,KAAO,SACZ+F,EAAK2C,KAAO,GACZ3C,EAAKpE,KAAO,WACR,IASG+J,EATCS,EAAc,CACd,SAAU,EACV,UAAW,EACX,UAAW,GACX,QAAS,GACT,SAAU,GACV,QAAS,GACT,OAAQ,GACR,gBAAiB,IAErB,IACIT,EAASiB,EAAchE,MAAM5C,EAAMA,EAAK2C,KAAKkE,IAAIrI,GAAGA,EAAE5C,SACxD,MAAO4J,GACL,GAA2B,aAAvBoB,EAAc3M,WACgBoM,IAA3BD,EAAYZ,EAAEc,SAEjBX,EAAS,MAER,IAA2B,YAAvBiB,EAAc3M,WACWoM,IAA3BD,EAAYZ,EAAEc,SAKjB,MAAMd,EAHNG,GAAS,GAMjB,OAAOA,GAEX3F,EAAKhC,KAAO,SAASmB,GACjBa,EAAK2C,KAAK3E,KAAKmB,M,6BCnCvBjG,EAAOD,QAAU,SAA2B2N,EAAe9J,GACvD,IAAIkD,EAAOzG,KACXyG,EAAK/F,KAAO,YACZ+F,EAAK2C,KAAO,GACZ3C,EAAKpE,KAAO,WACR,IACI,OAAOgL,EAAchE,MAAM5C,EAAMA,EAAK2C,MACxC,MAAM6C,GAKJ,MAAMA,IAGdxF,EAAKhC,KAAO,SAASmB,GACjBa,EAAK2C,KAAK3E,KAAKmB,M,6BCbvB,IAAI0B,EAAW,CACX,MAAStE,KAAKqI,MACd,mBAAoBrI,KAAKqI,MACzB,aAAcrI,KAAKqI,MACnB,IAAOrI,KAAKuK,IACZ,KAAQvK,KAAKwK,KACb,QA+uBJ,SAAiB9L,EAAK6C,EAAQkJ,EAAcC,GAAa,GAErD,IADA,IAAIC,EAAM,KACD5N,EAAI,EAAGA,EAAIwE,EAAOxB,OAAQhD,IAC/B,GAAIwE,EAAOxE,GAAG,GAAK2B,EACfiM,EAAMpJ,EAAOxE,GAAG0N,EAAe,QAE9B,GAAIlJ,EAAOxE,GAAG,IAAM2B,EACrB,OAAO6C,EAAOxE,GAAG0N,EAAe,GAGxC,GAAIC,GAAgBC,EAChB,OAAOA,EAEX,MAAMxI,MAAM,SA3vBZ,IAwrBJ,WAEI,IADA,IAAIyI,EAAM,KACD7N,EAAI8N,UAAU9K,OAAQhD,KAAM,CACjC,IAAI+N,EAAMD,UAAU9N,GACpB,GAAIgM,MAAMC,QAAQ8B,GAEd,IADA,IAAI7J,EAAM6J,EACDpJ,EAAIT,EAAIlB,OAAQ2B,KAAM,CAC3B,IAAIqJ,EAAM9J,EAAIS,GACd,GAAIqH,MAAMC,QAAQ+B,GACd,IAAK,IAAI/E,EAAI+E,EAAIhL,OAAQiG,MACV,MAAP4E,GAA0B,MAAVG,EAAI/E,IAAc4E,EAAMG,EAAI/E,MAC5C4E,EAAMG,EAAI/E,SAIN,MAAP4E,GAAuB,MAAPG,GAAeH,EAAMG,KAC1CH,EAAMG,QAIR1H,MAAMyH,KAAgB,MAAPF,GAAuB,MAAPE,GAAeF,EAAME,KAC1DF,EAAME,GAGd,OAAOF,GA/sBP,IAAOI,EACP,IAitBJ,WAEI,IADA,IAAIC,EAAM,KACDlO,EAAI8N,UAAU9K,OAAQhD,KAAM,CACjC,IAAI+N,EAAMD,UAAU9N,GACpB,GAAIgM,MAAMC,QAAQ8B,GAEd,IADA,IAAI7J,EAAM6J,EACDpJ,EAAIT,EAAIlB,OAAQ2B,KAAM,CAC3B,IAAIqJ,EAAM9J,EAAIS,GACd,GAAIqH,MAAMC,QAAQ+B,GACd,IAAK,IAAI/E,EAAI+E,EAAIhL,OAAQiG,MACV,MAAPiF,GAA0B,MAAVF,EAAI/E,IAAciF,EAAMF,EAAI/E,MAC5CiF,EAAMF,EAAI/E,SAIN,MAAPiF,GAAuB,MAAPF,GAAeE,EAAMF,KAC1CE,EAAMF,QAIR1H,MAAMyH,KAAgB,MAAPG,GAAuB,MAAPH,GAAeG,EAAMH,KAC1DG,EAAMH,GAGd,OAAOG,GAxuBP,YAspBJ,WAEI,IADA,IAAIhN,EAAI,GACClB,EAAI,EAAGA,EAAI8N,UAAU9K,OAAQhD,IAAK,CACvC,IAAI+N,EAAMD,UAAU9N,GAChB+N,UACJ7M,GAAK6M,GAET,OAAO7M,GA5pBP,IAqoBJ,SAAaiN,EAAiBC,EAAoBC,EAAeC,EAAcC,GAG3E,GAFAA,EAAOA,GAAQ,EACfD,EAAeA,GAAgB,EACR,GAAnBH,EAAwB,CAExB,IAAIK,EAAIvL,KAAKC,IAAI,EAAIiL,EAAiBC,GACtC,OAASD,GAAmBG,EAAgBE,EAAIH,MAAsB,EAAIG,IAAM,EAAIL,EAAkB,IAGrG,GAA0B,GAAtBC,EAEL,QAASE,EAAeD,GAAiBD,EAE7C,OAAO,GAjpBP,OAAUK,EACV,IAklBJ,SAAaC,EAAOC,GAChB,IAAIT,GAAO,EACPL,EAAM,EACNhM,EAAI,EACR,EAAG,CAGC,IAFA,IAAI+M,GAASV,EAAML,GAAO,EACtBgB,EAAM,EACD7O,EAAI,EAAGA,EAAI0O,EAAM1L,OAAQhD,IAAK,CACnC,IAAI+N,EAAMW,EAAM1O,GAChB6O,GAAOd,EAAI,GAAK9K,KAAKC,IAAK,EAAI0L,EAAQ5O,GAEtC6O,EAAM,GACFX,IAAQL,IACRA,GAAO5K,KAAKuK,IAAIoB,IAEpBV,EAAMU,GAGNf,EAAMe,EAEV/M,UACKoB,KAAKuK,IAAIqB,GAAO,MAAYhN,EAAI,KAEzC,OAAO+M,GAxmBP,WAAYE,EACZ,iBAAkBA,EAClB,MAkdJ,WACI,IAAI1C,EAAQ2C,EAAkBjB,WAE9B,SAASkB,EAAM5C,GACX,OAAOA,EAAM6C,QAAO,SAASlP,EAAGgM,GAC5B,OAAOhM,EAAIgM,KACVK,EAAMpJ,OAEf,IAAIkM,EAAOF,EAAM5C,GACb+C,EAAM/C,EAAMmB,KAAI,SAAS6B,GACrB,OAAQA,EAAMF,IAASE,EAAMF,MAErC,OAAOjM,KAAKwK,KAAK0B,EAAIF,QAAO,SAASlP,EAAGgM,GACpC,OAAOhM,EAAIgM,MACTK,EAAMpJ,OAAS,KA/drB,QAAWqM,EACX,IAocJ,SAAaxN,GACT,OAAOoB,KAAKC,IAAID,KAAKqM,EAAGzN,IApcxB,GAAMoB,KAAK8D,IACX,cAAewI,EACf,QAASA,EACT,qBAAsBC,EACtB,eAAgBA,EAChB,KA6WJ,SAAczP,GACV,OAAQ,GAAKA,GAAGwG,QA7WhB,IAwWJ,SAAaxG,GACT,OAAQ,GAAKA,GAAGiD,QAxWhB,QAAWyM,EACX,QA4UJ,SAAiBC,EAAQC,EAAOC,EAAOC,GACnC,QAAsB,IAAXH,GAA8BD,EAAUC,GAC/C,MAAMtK,MAAM,QAGhBwK,EAAQA,GAAS,EACjB,IAAoB5P,EAAG8P,EAAnBrL,EAAMkL,EAAM,GAEhB,GAAsB,iBAAXD,GAEP,IADAI,EAAeJ,EAAOrC,cACjBrN,EAAI,EAAGA,EAAIyE,EAAIzB,OAAQhD,IACxB,GAAI6P,GAAcpL,EAAIzE,KAAO8P,IAAgE,IAAhDrL,EAAIzE,GAAGqN,cAAczJ,QAAQkM,GACtE,OAAOF,EAAQD,EAAM3M,OAAS,EAAI2M,EAAMC,EAAQ,GAAG5P,GAAK2P,EAAM,GAAG3P,QAKzE,IADA8P,EAAeJ,EACV1P,EAAI,EAAGA,EAAIyE,EAAIzB,OAAQhD,IACxB,GAAI6P,GAAcpL,EAAIzE,KAAO8P,GAAgBrL,EAAIzE,KAAO8P,EACpD,OAAOF,EAAQD,EAAM3M,OAAS,EAAI2M,EAAMC,EAAQ,GAAG5P,GAAK2P,EAAM,GAAG3P,GAI7E,MAAMoF,MAAM,SAlWZ,MA0TJ,SAAeZ,EAAQuL,EAASC,GAC5B,GAAID,GAAWvL,EAAOxB,OAAQ,CAC1B,IAAIyB,EAAMD,EAAOuL,EAAU,GAC3B,IAAI/D,MAAMC,QAAQxH,GAOd,OAAOD,EAAOuL,GANd,IAAKC,EACD,OAAOvL,EACJ,GAAIuL,GAAcvL,EAAIzB,OACzB,OAAOyB,EAAIuL,EAAa,GAMpC,MAAM5K,MAAM,UAtUZ,MA2RJ,SAAe6K,EAAazL,EAAQ0L,GAC5BlE,MAAMC,QAAQzH,IACO,IAAlBA,EAAOxB,QACPgJ,MAAMC,QAAQzH,EAAO,MACxBA,EAASA,EAAO,IAEpB,IAAKyL,IAAgBzL,EACjB,MAAMY,MAAM,QAES,IAArB0I,UAAU9K,SACVkN,EAAY,GAEhB,KAAM1L,aAAkBwH,OACpB,MAAM5G,MAAM,QAEhB,GAAkB,IAAd8K,EACA,MAA2B,iBAAhBD,EACAE,EAAqB3L,EAAQyL,GAE7BG,EAAyB5L,EAAQyL,GAEzC,GAAkB,IAAdC,EACP,OAAOG,EAAyB7L,EAAQyL,GACrC,IAAmB,IAAfC,EACP,OAAOI,EAA4B9L,EAAQyL,GAE3C,MAAM7K,MAAM,SApThB,WAuFJ,WACI,IAAImL,EAAc,SAAUnG,GACxB,YAAe2C,IAAX3C,GAAmC,KAAXA,GAA4B,OAAXA,GAGxC9D,MAAM8D,GAFA,EAGAoG,WAAWpG,IAI1BqG,EAAuB,SAAUC,GAU7B,IATA,IAAIC,EAAc,SAASnM,GACnB,OAAOA,EAAOxB,QAElB4N,EAAc,SAASpM,GACnB,OAAOA,EAAO,GAAGxB,QAErB6N,EAAWF,EAAYD,EAAY,IACnCI,EAAWF,EAAYF,EAAY,IAE9B1Q,EAAI,EAAGA,EAAI0Q,EAAY1N,OAAQhD,IACpC,GAAI2Q,EAAYD,EAAY1Q,MAAQ6Q,GAC7BD,EAAYF,EAAY1Q,MAAQ8Q,EACnC,OAAO,EAGf,OAAO,GAGX,IAAKhD,WAAkC,IAArBA,UAAU9K,OACxB,MAAMoC,MAAM,WAEhB,IAAKqL,EAAqB3C,WACtB,MAAM1I,MAAM,WAGhB,IAAK,IAAIpF,EAAI,EAAGA,EAAI8N,UAAU9K,OAAQhD,IAAK,CACvC,IAAIyE,EAAMqJ,UAAU9N,GACpB,GAAIgM,MAAMC,QAAQxH,GACd,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAIzB,OAAQ2B,IAAK,CACjC,IAAIqJ,EAAMvJ,EAAIE,GACd,GAAIqH,MAAMC,QAAQ+B,GACd,IAAK,IAAI/E,EAAI,EAAGA,EAAI+E,EAAIhL,OAAQiG,IAAK,CACjC,IAAIhE,EACJ,IADIA,EAAO+I,EAAI/E,KACa,iBAAThE,GAAgC,MAAXA,EAAK3D,EACzC,MAAM8D,MAAMH,EAAK+B,QAMzB,IADI/B,EAAO+I,IACiB,iBAAT/I,GAAgC,MAAXA,EAAK3D,EACzC,MAAM8D,MAAMH,EAAK+B,QAO7B,IADI/B,EAAOR,IACiB,iBAATQ,GAAgC,MAAXA,EAAK3D,EACzC,MAAM8D,MAAMH,EAAK+B,GAK7B,IAEI+J,EAEAC,EACAC,EALAC,EAASpD,UAAU9K,OAAS,EAC5BqJ,EAAS,EAKb,IAASrM,EAAI,EAAGA,EAAI8N,UAAU,GAAG9K,OAAQhD,IACrC,GAAM8N,UAAU,GAAG9N,aAAcgM,MAS7B,IAASrH,EAAI,EAAGA,EAAImJ,UAAU,GAAG9N,GAAGgD,OAAQ2B,IAAK,CAE7C,IADAoM,EAAU,EACL9H,EAAI,EAAGA,EAAIiI,EAAQjI,IACpBgI,EAAMV,EAAYzC,UAAU7E,EAAI,GAAGjJ,GAAG2E,IAEtCoM,GAAWE,EAEf5E,GAAU0E,MAhBuB,CAErC,IADAA,EAAU,EACL9H,EAAI,EAAGA,EAAIiI,EAAQjI,IACpB+H,EAAKT,EAAYzC,UAAU7E,EAAI,GAAGjJ,IAElC+Q,GAAWC,EAEf3E,GAAU0E,EAalB,OAAO1E,GAlLP,SAkFJ,SAAkB8E,GACd,OAAQ7K,MAAM6K,IAlFd,MA2EJ,WACI,IAAIC,EAAQ,IAAIlE,KAEhB,OADAkE,EAAMC,SAAS,EAAG,EAAG,EAAG,GACjBD,GA7EP,QAouBJ,WAGI,OAAO,GAtuBP,KAyuBJ,SAAcE,EAAOC,EAASC,GAE1B,OAAiD,KAAhB,IAAhB,GAARF,EAAaC,GAAgBC,GADnB,OAzuBnB,IA6uBJ,SAAaC,GACT,IAAKA,EAAKC,QACN,MAAMtM,MAAM,WAEhB,IAAIuM,EAAMF,EAAKC,UACf,GAAIpL,MAAMqL,GACN,MAAMvM,MAAM,WAEhB,OAAOuM,GApvBP,MAuvBJ,SAAeF,GACX,IAAKA,EAAKG,SACN,MAAMxM,MAAM,WAEhB,IAAIyM,EAAQJ,EAAKG,WACjB,GAAItL,MAAMuL,GACN,MAAMzM,MAAM,WAEhB,OAAOyM,EAAQ,GA9vBf,KAiwBJ,SAAcJ,GACV,IAAKA,EAAKK,YACN,MAAM1M,MAAM,WAEhB,IAAI2M,EAAON,EAAKK,cAChB,GAAIxL,MAAMyL,GACN,MAAM3M,MAAM,WAEhB,OAAO2M,GAxwBP,MA2wBJ,SAAeC,EAAMC,GAGjB,GAFAA,OAAqBlF,IAAXkF,EAAwB,EAAIzB,WAAWyB,GAE7C3L,MAAM2L,GACN,MAAM7M,MAAM,WAGZ4M,EADAA,QACO,GAEA,GAAKA,EAEhB,OAAOA,EAAKE,UAAUF,EAAKhP,OAASiP,IArxBpC,KAwxBJ,SAAcD,EAAMC,GAGhB,GAFAA,OAAqBlF,IAAXkF,EAAwB,EAAIzB,WAAWyB,GAE7C3L,MAAM2L,GACN,MAAM7M,MAAM,WAGZ4M,EADAA,QACO,GAEA,GAAKA,EAEhB,OAAOA,EAAKE,UAAU,EAAGD,IAlyBzB,IAqyBJ,WACI,IAAK,IAAIjS,EAAI,EAAGA,EAAI,EAAI8N,UAAU9K,OAAQhD,GAAG,EAAG,CAC5C,IAAImS,EAAOrE,UAAU9N,GACjB4N,EAAME,UAAU9N,EAAE,GACtB,GAAImS,EACA,OAAOvE,EAGf,MAAMxI,MAAM,SA5yBZ,MA2DJ,SAAe/D,EAAO+Q,GAClB,GAAyB,IAArBtE,UAAU9K,OAAc,MAAM,IAAIoC,MAAM,WAC5C,GAAyB,IAArB0I,UAAU9K,OAAc,OAAOC,KAAKoP,MAAMhR,GAC9C,IAAIiR,EAAerP,KAAKC,IAAI,GAAIkP,GAChC,OAAOnP,KAAKoP,MAAMC,EAAajR,GAAOiR,GA9DtC,OA+BJ,SAAgBvS,EAAEgM,GAKd,GAHAhM,EAAIgP,EAAkBhP,GACtBgM,EAAIgD,EAAkBhD,GAElBhM,EAAEiD,SAAW+I,EAAE/I,OACf,MAAO,MAQX,IANA,IAAIuP,EAAQ,GAAOxS,EAAEiD,OAAO,GACxBwP,EAAQvE,EAAI3E,MAAMrJ,KAAMF,GAAKA,EAAEiD,OAC/ByP,EAAQxE,EAAI3E,MAAMrJ,KAAM8L,GAAKA,EAAE/I,OAC/Bb,EAAI,EACJuQ,EAAK,EACLC,EAAG,EACE3S,EAAI,EAAGA,EAAID,EAAEiD,OAAQhD,IAC1BmC,IAAMpC,EAAEC,GAAKwS,IAAUzG,EAAE/L,GAAKyS,GAE9BC,GAAIzP,KAAKC,IAAInD,EAAEC,GAAG,GAClB2S,GAAI1P,KAAKC,IAAI6I,EAAE/L,GAAG,GAMtB,OAHA0S,EAAGzP,KAAKwK,KAAKiF,EAAGH,GAChBI,EAAG1P,KAAKwK,KAAKkF,EAAGJ,GAETpQ,GAAKoQ,EAAMG,EAAGC,IAtDrB,MAUJ,WAEI,IAAIC,EAAe9E,UAAU,GACzB+E,EAAY,EAchB,MAZA,GAAGC,MAAMvS,KAAKuN,WAAW,GAAG,GAAG5H,QAAQ,CAAC6M,EAAIpR,KAE9B,OAANoR,IAEAA,EAAMA,EAAIC,YACFjQ,QAAQ,MAAO,MAAQ6P,IACtBtM,MAAM,GAAGwM,MAAMvS,KAAKuN,WAAW,GAAG,GAAGnM,MACtCkR,GAAa,GAAGC,MAAMvS,KAAKuN,WAAW,GAAG,GAAGnM,OAKrDkR,GA1BP,OAKJ,SAAgBI,GACZ,OAAOnF,UAAUmF,IALjB,WA+yBJ,SAAoBjB,EAAMkB,EAAUC,EAAUC,GAC1C,GAAGA,GAAc,EACf,MAAMhO,MAAM,WAEd,IAAK4M,IAASkB,IAAcC,GAAyB,KAAbA,EACtC,OAAOnB,EACF,QAAmBjF,IAAfqG,EACT,OAAOpB,EAAKjP,QAAQ,IAAIsQ,OAAoBH,EAVnCnQ,QAAQ,8BAA+B,QAUO,KAAMoQ,GAI7D,IAFA,IAAIvD,EAAQ,EACR5P,EAAI,EACDgS,EAAKpO,QAAQsP,EAAUtD,GAAS,GAGrC,GAFAA,EAAQoC,EAAKpO,QAAQsP,EAAUtD,EAAQ,KACvC5P,IACUoT,EACR,OAAOpB,EAAKE,UAAU,EAAGtC,GAASuD,EAAWnB,EAAKE,UAAUtC,EAAQsD,EAASlQ,SA7zBnF,QAm0BJ,SAAiBiP,EAAQqB,GACrB,OAAOrQ,KAAKsQ,KAAKtB,EAASqB,GAAgBA,IA9pB9C,SAASjD,EAAyB7L,EAAQyL,GAGtC,IAFA,IAAIL,EACA4D,EACKC,EAAM,EAAGA,EAAMjP,EAAOxB,OAAQyQ,IAAO,CAC1C,GAAIjP,EAAOiP,KAASxD,EAChB,OAAOwD,EAAM,EACNjP,EAAOiP,GAAOxD,IAChBuD,EAGMhP,EAAOiP,GAAOD,IACrB5D,EAAQ6D,EAAM,EACdD,EAAahP,EAAOiP,KAJpB7D,EAAQ6D,EAAM,EACdD,EAAahP,EAAOiP,KAOhC,IAAK7D,EACD,MAAMxK,MAAM,QAEhB,OAAOwK,EAGX,SAASO,EAAqB3L,EAAQyL,GAClC,IAAK,IAAIwD,EAAM,EAAGA,EAAMjP,EAAOxB,OAAQyQ,IAEnC,GADAxD,EAAcA,EAAYlN,QAAQ,MAAO,KACrCiJ,MAAMC,QAAQzH,EAAOiP,KACrB,GAA2B,IAAvBjP,EAAOiP,GAAKzQ,QACiB,iBAAnBwB,EAAOiP,GAAK,IACdjP,EAAOiP,GAAK,GAAGpG,gBAAkB4C,EAAY5C,cAC7C,OAAOoG,EAAM,OAGtB,GAA2B,iBAAhBjP,EAAOiP,IACjBjP,EAAOiP,GAAKpG,gBAAkB4C,EAAY5C,cAC1C,OAAOoG,EAAM,EAKzB,MAAMrO,MAAM,QAGhB,SAASgL,EAAyB5L,EAAQyL,GACtC,IAAK,IAAIwD,EAAM,EAAGA,EAAMjP,EAAOxB,OAAQyQ,IACnC,GAAIzH,MAAMC,QAAQzH,EAAOiP,KACrB,GAA2B,IAAvBjP,EAAOiP,GAAKzQ,QACRwB,EAAOiP,GAAK,KAAOxD,EACnB,OAAOwD,EAAM,OAGlB,GAAIjP,EAAOiP,KAASxD,EACvB,OAAOwD,EAAM,EAGrB,MAAMrO,MAAM,QAQhB,SAASkL,EAA4B9L,EAAQyL,GAGzC,IAFA,IAAIL,EACA4D,EACKC,EAAM,EAAGA,EAAMjP,EAAOxB,OAAQyQ,IACnC,GAAIzH,MAAMC,QAAQzH,EAAOiP,KAASjP,EAAOiP,GAAKzQ,OAAS,EAAG,CAEtD,GAAIwB,EAAOiP,GAAK,KAAOxD,EACnB,OAAOwD,EAAM,EACNjP,EAAOiP,GAAK,GAAKxD,IACnBuD,EAGMhP,EAAOiP,GAAK,GAAKD,IACxB5D,EAAQ6D,EAAM,EACdD,EAAahP,EAAOiP,GAAK,KAJzB7D,EAAQ6D,EAAM,EACdD,EAAahP,EAAOiP,GAAK,SAM9B,CAEH,GAAIjP,EAAOiP,KAASxD,EAChB,OAAOwD,EAAM,EACNjP,EAAOiP,GAAOxD,IAChBuD,EAGMhP,EAAOiP,GAAOD,IACrB5D,EAAQ6D,EAAM,EACdD,EAAahP,EAAOiP,KAJpB7D,EAAQ6D,EAAM,EACdD,EAAahP,EAAOiP,KAQpC,IAAK7D,EACD,MAAMxK,MAAM,QAEhB,OAAOwK,EAoFX,SAASH,EAAS1P,GAEd,OAAQA,EAGZ,SAASyP,EAAazP,EAAGgM,GAGrB,GAFAhM,EAAIgP,EAAkBhP,GACtBgM,EAAIgD,EAAkBhD,GAClBhM,EAAEiD,QAAU+I,EAAE/I,OACd,MAAO,MAMX,IAJA,IAAIuP,EAAQ,EAAMxS,EAAEiD,OAChBwP,EAAQvE,EAAI3E,MAAMrJ,KAAMF,GAAKA,EAAEiD,OAC/ByP,EAAQxE,EAAI3E,MAAMrJ,KAAM8L,GAAKA,EAAE/I,OAC/Bb,EAAI,EACCnC,EAAI,EAAGA,EAAID,EAAEiD,OAAQhD,IAC1BmC,IAAMpC,EAAEC,GAAKwS,IAAUzG,EAAE/L,GAAKyS,GAElC,OAAOtQ,EAAIoQ,EAGf,SAASxD,EAAkBL,GAEvB,IADA,IAAIxK,EAAM,GACDlE,EAAI,EAAGA,EAAI0O,EAAM1L,OAAQhD,IAAK,CACnC,IAAI+N,EAAMW,EAAM1O,GAChB,GAAIgM,MAAMC,QAAQ8B,IAEd,IADA,IAAIvJ,EAASuJ,EACJpJ,EAAIH,EAAOxB,OAAQ2B,KACxB,GAAyB,iBAAdH,EAAOG,GACdT,EAAIQ,KAAKF,EAAOG,SAEf,GAAIqH,MAAMC,QAAQzH,EAAOG,IAC1B,IAAK,IAAIsE,EAAIzE,EAAOG,GAAG3B,OAAQiG,KACC,iBAAjBzE,EAAOG,GAAGsE,IACjB/E,EAAIQ,KAAKF,EAAOG,GAAGsE,QAUhB,iBAAT,GACN/E,EAAIQ,KAAKqJ,GAIrB,OAAO7J,EAGX,SAASqL,IAIL,IAHA,IAAImE,EAAUrE,EAAI/F,MAAMrJ,KAAM6N,WAC1B3L,EAAI,EACJ1B,EAAI,EACCT,EAAI,EAAGA,EAAI8N,UAAU9K,OAAQhD,IAAK,CACvC,IAAI+N,EAAMD,UAAU9N,GACpB,GAAIgM,MAAMC,QAAQ8B,GAEd,IADA,IAAIvJ,EAASuJ,EACJpJ,EAAIH,EAAOxB,OAAQ2B,KACxB,IAAK,IAAIsE,EAAIzE,EAAOG,GAAG3B,OAAQiG,KACN,OAAjBzE,EAAOG,GAAGsE,SAAgC8D,IAAjBvI,EAAOG,GAAGsE,KACnC9G,GAAKc,KAAKC,IAAIsB,EAAOG,GAAGsE,GAAKyK,EAAS,GACtCjT,UAMZ0B,GAAKc,KAAKC,IAAI6K,EAAM2F,EAAS,GAC7BjT,IAGR,OAAO0B,EAAI1B,EAOf,SAAS4O,IACL,IAAIxL,EAAM4K,EAAOnF,MAAMrJ,KAAM6N,WAC7B,GAAW,GAAPjK,EACA,MAAMuB,MAAM,WAEhB,OAAO6I,EAAI3E,MAAMrJ,KAAM6N,WAAajK,EAyCxC,SAASiL,EAAS5M,EAAGyR,EAAIC,GACrB,GAAI1R,EAAI,GAAKA,EAAI,EACb,KAAM,2DAEV,GAAI0R,EAAQ,EACR,KAAM,gDAGV,OAAS,GAAL1R,GACQ2R,IAEH,GAAL3R,EACO2R,IAEE,GAATD,EACOD,GAKXnF,EAAItM,EAAI,GAQJe,KAAKuK,IAAIgB,IAAM,KAEfZ,EACIY,SAAe,oBAFnBtN,EAAI,QAAUsN,EAAIA,GAGE,mBAAyBtN,EAAI,kBAAyBA,EAC1D,mBAAyBA,EAAI,mBAAyBA,EAC1D,oBAAyBA,EAAI,oBAAyBA,EAC1D,2BAAmC,kBAAJA,EACvB,oBAAyBA,EAAI,mBAAwBA,EACzD,oBAAyBA,EAAI,mBAAyBA,EAC1D,mBAAwBA,EAAI,mBAAyBA,EAAI,IAM7DA,EADAsN,EAAI,EACA,EAAItM,EAEJA,EAOJ0L,GALJ1M,EAAI+B,KAAKwK,MAAMxK,KAAK8D,IAAI7F,MAGf,SAEY,sBADjBA,IAAM,KAEc,qBAA2BA,EAAI,mBACnCA,EAAI,oBAA0BA,EAClC,oBAA0BA,EAAI,mBAClCA,EAAI,mBAAyBA,EACjC,2BACgB,sBADiBA,EACW,sBAChCA,EAAI,qBAA2BA,EACnC,oBAAyBA,EAAI,gBACjCA,EAAI,oBAAyBA,EACjC,mBAA0BA,EAAI,UAIjB,uBADjBA,IAAM,GAEc,uBAA6BA,EACjC,sBAA2BA,EAAI,qBACnCA,EAAI,oBAAyBA,EACjC,oBAAyBA,EAAI,mBACjCA,EAAI,0BACQ,sBADwBA,EACK,sBACjCA,EAAI,uBAA4BA,EACpC,sBAA2BA,EAAI,qBAA2BA,EAAI,mBAAyBA,EAC3F,kBAAyBA,EAAI,GAGjCsN,EAAI,IACJZ,GAAOA,IAIR+F,EAAKC,EAAQhG,GAlEpB,IAAIY,EAAGtN,EAAG0M,EA+Fd,SAASa,IAEL,IADA,IAAIvN,EAAI,EACClB,EAAI8N,UAAU9K,OAAQhD,KAAM,CACjC,IAAI+N,EAAMD,UAAU9N,GACpB,GAAIgM,MAAMC,QAAQ8B,GAEd,IADA,IAAIvJ,EAASuJ,EACJpJ,EAAIH,EAAOxB,OAAQ2B,KACxB,IAAK,IAAIsE,EAAIzE,EAAOG,GAAG3B,OAAQiG,KACN,OAAjBzE,EAAOG,GAAGsE,SAAgC8D,IAAjBvI,EAAOG,GAAGsE,IACnC/H,SAMR6M,SACA7M,IAIZ,OAAOA,EA6BX,SAAS+M,IAEL,IADA,IAAI/M,EAAI,EACClB,EAAI8N,UAAU9K,OAAQhD,KAAM,CACjC,IAAI+N,EAAMD,UAAU9N,GACpB,GAAIgM,MAAMC,QAAQ8B,GAEd,IADA,IAAIvJ,EAASuJ,EACJpJ,EAAIH,EAAOxB,OAAQ2B,KACxB,IAAK,IAAIsE,EAAIzE,EAAOG,GAAG3B,OAAQiG,KACtB3C,MAAM9B,EAAOG,GAAGsE,MACjB/H,IAAMsD,EAAOG,GAAGsE,SAM5B/H,IAAM6M,EAGd,OAAO7M,EAyLXtB,EAAOD,QAAU4H,G,6BCx3BjB,MAAMlE,EAAgB,EAAQ,GACxBD,EAAgB,EAAQ,GACxBmC,EAAW,EAAQ,GACnBG,EAAQ,EAAQ,GAChBF,EAAW,EAAQ,GA+HzB5F,EAAOD,QAAU,CACb,OA9HJ,SAAoBmU,EAAUC,EAAMC,EAASC,EAAQC,GAGjD,GAFAD,GAAUA,GAAU,IAAI1O,EAAS,IAAIjD,OACrC4R,GAASA,GAAS,IAAI3O,EAAS,IAAIjD,OACN,IAAzBwR,EAASzK,KAAKrG,QAA0C,aAA1B8Q,EAASzK,KAAK,GAAG1I,KAAqB,CACpE,IAAIwT,EAAYL,EAASzK,KAAK,GAC1B+K,EAAaD,EAAUxN,WACvBqH,EAAM5K,EAAcgR,EAAWxP,WAAaoP,EAAQ1R,OACpDO,EAAUQ,EAAc2K,GACxBvJ,GAAO2P,EAAWxP,UAAU7B,QAAQ,WAAY,IAAMgR,EAAKzR,OAC3DsC,EAAYwP,EAAW1Q,WAAa,IAAMb,EAAU4B,EACxD,GAAe,IAAXwP,GAA0B,IAAVC,EAChB,OAAO,IAAI1O,EAASZ,EAAWuP,EAAU3Q,SAASlB,OAGlD,IAAI+R,EAAgBhR,EAAc2K,EAAMkG,EAAQ,GAIhD,OAAO,IAAIxO,EADUd,EAAY,KADjByP,GADI5P,EAAMwP,EAAS,IAGFE,EAAU3Q,SAASlB,SA6G5D,QAxGJ,SAAiBwR,EAAUQ,GACvB,IACI,IAAIjT,EAAQyS,EAASxR,OACrB,MAAqB,iBAAVjB,IAAuBiF,MAAMjF,IAAUA,IAAUwS,KAAYxS,KAAWwS,IAG5ExS,EAFIiT,EAAahS,OAG1B,MAAO4J,GACL,OAAOoI,EAAahS,SAiGxB,GA7FJ,SAAaiS,EAAWC,EAAOC,GAC3B,OAAIF,EAAUjS,OAMHkS,EAAMlS,YAGQ,IAAVmS,GAGAA,EAAMnS,QAiFrB,IA5EJ,WACI,IAAK,IAAItC,EAAI,EAAGA,EAAI8N,UAAU9K,OAAQhD,IAClC,IAAK8N,UAAU9N,GAAGsC,OAAQ,OAAO,EAErC,OAAO,GAyEP,GAtEJ,WACI,IAAK,IAAItC,EAAI,EAAGA,EAAI8N,UAAU9K,OAAQhD,IAClC,GAAI8N,UAAU9N,GAAGsC,OAAQ,OAAO,EAEpC,OAAO,GAmEP,UAhEJ,SAAmBoS,GACf,IAIIlQ,EAJQkQ,EAAoBrL,KAAK,GAIlB/G,OAEfqS,EADWD,EAAoBlR,QAAQ7C,KACrB2E,MAAM,oBACxB3B,EAAQ+Q,EAAoBlR,QAAQG,MAGpCiR,EAAYxR,EAAcuR,EAAO,IACjCE,GAAaF,EAAO,GACxB,IAAK,IAAI3U,EAAI,EAAGA,EAAIwE,EAAOxB,OAAQhD,IAAK,CACpC,IAAI8U,EAAYtQ,EAAOxE,GACvB,IAAK,IAAI2E,EAAI,EAAGA,EAAImQ,EAAU9R,OAAQ2B,IAAK,CACvC,IAAIoQ,EAAoBH,EAAY5U,EAChCgV,EAAiBH,EAAYlQ,EAC7BtD,EAAQyT,EAAUnQ,GAEtBhB,EAAMN,EAAc0R,GAAqBC,GAAgB3S,EAAIhB,GAIrE,OAAOmD,EAAO,GAAG,IAyCjB,OAtCJ,SAAgBkK,EAAO6F,GACnB,IAAIU,EAAOvG,EAAMpM,OACb4S,EAAaX,EAAUjS,OACvB6S,EAAWzG,EAAMlL,QAAQ7C,KACzByU,EAAYD,EAAS7P,MAAM,oBAC3B3B,EAAQ+K,EAAMlL,QAAQG,MACtBiR,EAAYxR,EAAcgS,EAAU,IACpCP,GAAaO,EAAU,GAEvBC,EAAc1R,EAAMwR,GAAU9S,EAClC,IAAK,IAAIrC,EAAI,EAAGA,EAAIkV,EAAW,GAAGlS,OAAQhD,IACtC,GAAIkV,EAAW,GAAGlV,GACd,IAAK,IAAIyE,EAAM,EAAGA,EAAMwQ,EAAKjS,OAAQyB,IAAO,CACxC,IACIuQ,EAAiBH,EAAYpQ,EAC7B6Q,EAAsBjS,EAFFuR,EAAY5U,GAEyBgV,EAEzDrR,EAAM2R,IACN3R,EAAM2R,GAAqBjT,EAAI4S,EAAKxQ,GAAKzE,GACrCsV,IAAwBH,IACxBE,EAAcJ,EAAKxQ,GAAKzE,KAG5B2D,EAAM2R,GAAuB,CAAEjT,EAAG4S,EAAKxQ,GAAKzE,IAK5D,OAAOqV,K,6BChIX,MAAM9P,EAAW,EAAQ,GACnBc,EAAY,EAAQ,GACpBa,EAA+B,EAAQ,GAiF7CtH,EAAOD,QA/EP,MAEI,YAAY0H,EAAUrC,GAClB/E,KAAKoH,SAAWA,EAChBpH,KAAKsV,YAAc,GACnBtV,KAAK+E,aAAeA,EACpB/E,KAAKuV,UAAY,GACjBvV,KAAKsH,SAAWL,EAA6BG,EAAUrC,GACvD,IAAK,IAAIhF,EAAIC,KAAKsH,SAASvE,OAAS,EAAGhD,GAAK,EAAGA,IAAK,CAChD,IAAImK,EAAMnF,EAAakE,iBAAiBjJ,KAAKsH,SAASvH,IACtDC,KAAKsV,YAAY7Q,KAAKyF,GAE1BlK,KAAKwV,YAGT,OAAOC,EAAUrU,GACb,IAAIsU,EAAW1V,KAAKuV,UAAUE,GAC1BC,EACAA,EAASvT,SAASf,GAElBpB,KAAKsV,YAAYrP,QAAQiE,IACrBlK,KAAK2V,mBAAmBzL,EAAKuL,EAAUrU,KAKnD,UACI,IAAIwU,EAAO,GACX,IAAK,IAAI5M,KAAKhJ,KAAKuV,UACfK,EAAK5M,GAAKhJ,KAAKuV,UAAUvM,GAAG3G,OAEhC,OAAOuT,EAGX,YACS5V,KAAKoH,UAAapH,KAAKoH,SAASvB,UAAa7F,KAAKoH,SAASvB,SAASC,OAGzE9F,KAAKoH,SAASvB,SAASC,MAAMG,QAAQ4P,IACjC,IAAIlI,EAAM3N,KAAK8V,OAAOD,EAAK1P,KAC3BnG,KAAKuV,UAAUM,EAAK3P,MAAQyH,EAC5B3N,KAAKsV,YAAYrP,QAAQiE,IACrBlK,KAAK2V,mBAAmBzL,EAAK2L,EAAK3P,UAK9C,OAAO6P,GACH,IAAK/V,KAAKsH,SAASvE,OACf,MAAM,IAAIoC,MAAM,qBAEpB,IAEI5B,EAAU,CACVsB,YAHgB7E,KAAKsH,SAAS,GACFzC,YAG5Bf,GAAI9D,KAAKoH,SACTrC,aAAc/E,KAAK+E,cAEvB,OAAOqB,EAAU2P,EAAUxS,GAG/B,mBAAmB2G,EAAKuL,EAAUrU,GAC9B,IAAK,IAAIrB,EAAI,EAAGA,EAAImK,EAAId,KAAKrG,OAAQhD,IAAK,CACtC,IAAI+N,EAAM5D,EAAId,KAAKrJ,GACf+N,IAAQ2H,EACRvL,EAAId,KAAKrJ,GAAKC,KAAKuV,UAAUE,KAAczV,KAAKuV,UAAUE,GAAY,IAAInQ,EAASlE,IAC7D,iBAAR0M,GAAkC,eAAbA,EAAIpN,MAAsC,WAAboN,EAAIpN,MACpEV,KAAK2V,mBAAmB7H,EAAK2H,EAAUrU,IAKnD,UACIpB,KAAKsV,YAAYrP,QAAQiE,IACrBA,EAAIhB","file":"xlsx-calc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","\"use strict\";\n\nmodule.exports = function RawValue(value) {\n    this.setValue = function(v) {\n        value = v;\n    };\n    this.calc = function() {\n        return value;\n    };\n};\n","\"use strict\";\n\nmodule.exports = function int_2_col_str(n) {\n    var dividend = n + 1;\n    var columnName = '';\n    var modulo;\n    var guard = 10;\n    while (dividend > 0 && guard--) {\n        modulo = (dividend - 1) % 26;\n        columnName = String.fromCharCode(modulo + 65) + columnName;\n        dividend = (dividend - modulo - 1) / 26;\n    }\n    return columnName;\n};","\"use strict\";\n\nmodule.exports = function col_str_2_int(col_str) {\n    var r = 0;\n    var colstr = col_str.replace(/[0-9]+$/, '');\n    for (var i = colstr.length; i--;) {\n        r += Math.pow(26, colstr.length - i - 1) * (colstr.charCodeAt(i) - 64);\n    }\n    return r - 1;\n};","\"use strict\";\n\nconst col_str_2_int = require('./col_str_2_int.js');\nconst int_2_col_str = require('./int_2_col_str.js');\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\n\nmodule.exports = function Range(str_expression, formula) {\n    this.calc = function() {\n        var range_expression, sheet_name, sheet;\n        if (str_expression.indexOf('!') != -1) {\n            var aux = str_expression.split('!');\n            sheet_name = getSanitizedSheetName(aux[0]);\n            range_expression = aux[1];\n        }\n        else {\n            sheet_name = formula.sheet_name;\n            range_expression = str_expression;\n        }\n        sheet = formula.wb.Sheets[sheet_name];\n        var arr = range_expression.split(':');\n        var min_row = parseInt(arr[0].replace(/^[A-Z]+/, ''), 10) || 0;\n        var str_max_row = arr[1].replace(/^[A-Z]+/, '');\n        var max_row;\n        if (str_max_row === '' && sheet['!ref']) {\n            str_max_row = sheet['!ref'].split(':')[1].replace(/^[A-Z]+/, '');\n        }\n        // the max is 1048576, but TLE\n        max_row = parseInt(str_max_row == '' ? '500000' : str_max_row, 10);\n        var min_col = col_str_2_int(arr[0]);\n        var max_col = col_str_2_int(arr[1]);\n        var matrix = [];\n        for (var i = min_row; i <= max_row; i++) {\n            var row = [];\n            matrix.push(row);\n            for (var j = min_col; j <= max_col; j++) {\n                var cell_name = int_2_col_str(j) + i;\n                var cell_full_name = sheet_name + '!' + cell_name;\n                var formula_ref = formula.formula_ref[cell_full_name];\n                if (formula_ref) {\n                    if (formula_ref.status === 'new') {\n                        formula.exec_formula(formula_ref);\n                    } else if (formula_ref.status === 'working') {\n                        if (formula_ref.cell.f.includes(formula.name)) {\n                            throw new Error('Circular ref');\n                        }\n                        formula.exec_formula(formula_ref);\n                    }\n                    if (sheet[cell_name].t === 'e') {\n                        row.push(sheet[cell_name]);\n                    }\n                    else {\n                        row.push(sheet[cell_name].v);\n                    }\n                }\n                else if (sheet[cell_name]) {\n                    if (sheet[cell_name].t === 'e') {\n                        row.push(sheet[cell_name]);\n                    }\n                    else {\n                        row.push(sheet[cell_name].v);\n                    }\n                }\n                else {\n                    row.push(null);\n                }\n            }\n        }\n        return matrix;\n    };\n};\n","\"use strict\";\n\nmodule.exports = function getSanitizedSheetName(sheet_name) {\n    var quotedMatch = sheet_name.match(/^'(.*)'$/);\n    if (quotedMatch) {\n        return quotedMatch[1];\n    }\n    else {\n        return sheet_name;\n    }\n};\n","const RawValue = require('./RawValue.js');\nconst RefValue = require('./RefValue.js');\nconst LazyValue = require('./LazyValue.js');\nconst Range = require('./Range.js');\n\n// this is used to _cache_ range names so that it doesn't need to be queried\n// every time a range is used\nlet definedNames, wb;\nfunction getDefinedName(buffer, formula) {\n    if (!(formula.wb.Workbook && formula.wb.Workbook.Names)) {\n        return null;\n    }\n    if (wb !== formula.wb) {\n        wb = formula.wb;\n        definedNames = null;\n        return getDefinedName(buffer, formula);\n    }\n    if (definedNames) {\n        return definedNames[buffer];\n    }\n    const keys = Object.values(formula.wb.Workbook.Names);\n    if (keys.length === 0) {\n        return;\n    }\n    definedNames = {};\n    keys.forEach(({ Name, Ref }) => {\n        if (!Name.includes('.')) {\n            definedNames[Name] = Ref;\n        }\n    });\n\n    return getDefinedName(buffer, formula);\n}\n\nmodule.exports = function str_2_val(buffer, formula) {\n    if (!isNaN(buffer)) {\n        return new RawValue(+buffer);\n    }\n    if (buffer === 'TRUE') {\n        return new RawValue(1);\n    }\n    if (typeof buffer !== 'string') {\n        return buffer;\n    }\n\n    buffer = buffer.trim().replace(/\\$/g, '')\n\n    if (buffer.match(/^[A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[A-Z]+:[A-Z]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+:[A-Z]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[A-Z]+[0-9]+$/)) {\n        return new RefValue(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+$/)) {\n        return new RefValue(buffer, formula);\n    }\n    if (buffer.match(/%$/)) {\n        var inner = str_2_val(buffer.substr(0, buffer.length-1), formula)\n        return new LazyValue(() => inner.calc() / 100)\n    }\n    if (getDefinedName(buffer, formula)) {\n        return str_2_val(getDefinedName(buffer, formula), formula);\n    }\n    return buffer;\n};\n","\"use strict\";\n\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\n\nmodule.exports = function RefValue(str_expression, formula) {\n    var self = this;\n    this.name = 'RefValue';\n    this.str_expression = str_expression;\n    this.formula = formula;\n\n    self.parseRef = function() {\n        var sheet, sheet_name, cell_name, cell_full_name;\n        if (str_expression.indexOf('!') != -1) {\n            var aux = str_expression.split('!');\n            sheet_name = getSanitizedSheetName(aux[0]);\n            sheet = formula.wb.Sheets[sheet_name];\n            cell_name = aux[1];\n        }\n        else {\n            sheet = formula.sheet;\n            sheet_name = formula.sheet_name;\n            cell_name = str_expression;\n        }\n        if (!sheet) {\n            throw Error(\"Sheet \" + sheet_name + \" not found.\");\n        }\n        cell_full_name = sheet_name + '!' + cell_name;\n        return {\n            sheet: sheet,\n            sheet_name: sheet_name,\n            cell_name: cell_name,\n            cell_full_name: cell_full_name\n        };\n    };\n\n    this.calc = function() {\n        var resolved_ref = self.parseRef();\n        var sheet = resolved_ref.sheet;\n        var cell_name = resolved_ref.cell_name;\n        var cell_full_name = resolved_ref.cell_full_name;\n        var ref_cell = sheet[cell_name];\n        if (!ref_cell) {\n            return null;\n        }\n        var formula_ref = formula.formula_ref[cell_full_name];\n        if (formula_ref) {\n            if (formula_ref.status === 'new') {\n                formula.exec_formula(formula_ref);\n                if (ref_cell.t === 'e') {\n                    console.log('ref is an error with new formula', cell_full_name, ref_cell.w);\n                    throw new Error(ref_cell.w);\n                }\n                return ref_cell.v;\n            }\n            else if (formula_ref.status === 'working') {\n                if (ref_cell.f.includes(formula.name)) {\n                    throw new Error('Circular ref');\n                }\n                formula.exec_formula(formula_ref);\n                return this.calc();\n            }\n            else if (formula_ref.status === 'done') {\n                if (ref_cell.t === 'e') {\n                    console.log('ref is an error after formula eval', cell_full_name, ref_cell.w);\n                    throw new Error(ref_cell.w);\n                }\n                return ref_cell.v;\n            }\n        }\n        else {\n            if (ref_cell.t === 'e') {\n                console.log('ref is an error with no formula', cell_name);\n                throw new Error(ref_cell.w);\n            }\n            return ref_cell.v;\n        }\n    };\n};\n","\"use strict\";\n\nmodule.exports = function find_all_cells_with_formulas(wb, exec_formula) {\n    let formula_ref = {};\n    let cells = [];\n    for (let sheet_name in wb.Sheets) {\n        let sheet = wb.Sheets[sheet_name];\n        for (let cell_name in sheet) {\n            if (sheet[cell_name] && sheet[cell_name].f) {\n                let formula = formula_ref[sheet_name + '!' + cell_name] = {\n                    formula_ref: formula_ref,\n                    wb: wb,\n                    sheet: sheet,\n                    sheet_name: sheet_name,\n                    cell: sheet[cell_name],\n                    name: cell_name,\n                    status: 'new',\n                    exec_formula: exec_formula\n                };\n                cells.push(formula);\n            }\n        }\n    }\n    return cells;\n};\n","\"use strict\";\n\nconst int_2_col_str = require('./int_2_col_str.js');\nconst col_str_2_int = require('./col_str_2_int.js');\nconst exec_formula = require('./exec_formula.js');\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\nconst Calculator = require('./Calculator.js');\n\nvar mymodule = function(workbook, options) {\n    var formulas = find_all_cells_with_formulas(workbook, exec_formula);\n    for (var i = formulas.length - 1; i >= 0; i--) {\n      try {\n        exec_formula(formulas[i]);\n      } catch (error) {\n        if (!options || !options.continue_after_error) {\n          throw error\n        }\n        if (options.log_error) {\n          console.log('error executing formula', 'sheet', formulas[i].sheet_name, 'cell', formulas[i].name, error)\n        }\n      }\n    }\n};\n\nmymodule.calculator = function calculator(workbook) {\n    return new Calculator(workbook, exec_formula);\n};\n\nmymodule.set_fx = exec_formula.set_fx;\nmymodule.exec_fx = exec_formula.exec_fx;\nmymodule.col_str_2_int = col_str_2_int;\nmymodule.int_2_col_str = int_2_col_str;\nmymodule.import_functions = exec_formula.import_functions;\nmymodule.import_raw_functions = exec_formula.import_raw_functions;\nmymodule.xlsx_Fx = exec_formula.xlsx_Fx;\nmymodule.localizeFunctions = exec_formula.localizeFunctions;\n\nmymodule.XLSX_CALC = mymodule\n\nmodule.exports = mymodule;\n","\"use strict\";\n\nconst expression_builder = require('./expression_builder.js');\n\nlet xlsx_Fx = {};\nlet xlsx_raw_Fx = {};\n\nimport_functions(require('./formulas.js'));\nimport_raw_functions(require('./formulas-raw.js'));\n\nfunction import_raw_functions(functions, opts) {\n    for (var key in functions) {\n        xlsx_raw_Fx[key] = functions[key];\n    }\n}\n\nfunction import_functions(formulajs, opts) {\n    opts = opts || {};\n    var prefix = opts.prefix || '';\n    for (var key in formulajs) {\n        var obj = formulajs[key];\n        if (typeof(obj) === 'function') {\n            if (opts.override || !xlsx_Fx[prefix + key]) {\n                xlsx_Fx[prefix + key] = obj;\n            }\n            // else {\n            //     console.log(prefix + key, 'already exists.');\n            //     console.log('  to override:');\n            //     console.log('    XLSX_CALC.import_functions(yourlib, {override: true})');\n            // }\n        }\n        else if (typeof(obj) === 'object') {\n            import_functions(obj, my_assign(opts, { prefix: key + '.' }));\n        }\n    }\n}\n\nfunction my_assign(dest, source) {\n    var obj = JSON.parse(JSON.stringify(dest));\n    for (var k in source) {\n        obj[k] = source[k];\n    }\n    return obj;\n}\n\nfunction build_expression(formula) {\n    return expression_builder(formula, {xlsx_Fx: xlsx_Fx, xlsx_raw_Fx: xlsx_raw_Fx});\n}\n\nfunction exec_formula(formula) {\n    let root_exp = build_expression(formula);\n    root_exp.update_cell_value();\n}\n\nexec_formula.set_fx = function set_fx(name, fn) {\n    xlsx_Fx[name] = fn;\n};\n\nexec_formula.exec_fx = function exec_fx(name, args) {\n    return xlsx_Fx[name].apply(this, args);\n};\n\nexec_formula.localizeFunctions = function(dic) {\n    for (let newName in dic) {\n        let oldName = dic[newName];\n        if (xlsx_Fx[oldName]) {\n            xlsx_Fx[newName] = xlsx_Fx[oldName];\n        }\n        if (xlsx_raw_Fx[oldName]) {\n            xlsx_raw_Fx[newName] = xlsx_raw_Fx[oldName];\n        }\n    }\n};\n\nexec_formula.import_functions = import_functions;\nexec_formula.import_raw_functions = import_raw_functions;\nexec_formula.build_expression = build_expression;\nexec_formula.xlsx_Fx = xlsx_Fx;\nmodule.exports = exec_formula;\n","const Exp = require('./Exp.js');\nconst RawValue = require('./RawValue.js');\nconst UserFnExecutor = require('./UserFnExecutor.js');\nconst UserRawFnExecutor = require('./UserRawFnExecutor.js');\nconst common_operations = {\n    '*': 'multiply',\n    '+': 'plus',\n    '-': 'minus',\n    '/': 'divide',\n    '^': 'power',\n    '&': 'concat',\n    '<': 'lt',\n    '>': 'gt',\n    '=': 'eq'\n};\n\nmodule.exports = function expression_builder(formula, opts) {\n    formula.status = 'working';\n\n    var xlsx_Fx = opts.xlsx_Fx || {};\n    var xlsx_raw_Fx = opts.xlsx_raw_Fx || {};\n\n    var root_exp;\n    var str_formula = formula.cell.f;\n    if (str_formula[0] == '=') {\n        str_formula = str_formula.substr(1);\n    }\n    var exp_obj = root_exp = new Exp(formula);\n    var buffer = '',\n        was_string = false;\n    var fn_stack = [{\n        exp: exp_obj\n    }];\n\n    /**\n     * state pattern in functional way\n     */\n    function string(char) {\n        if (char === '\"') {\n            exp_obj.push(new RawValue(buffer));\n            was_string = true;\n            buffer = '';\n            state = start;\n        } else {\n            buffer += char;\n        }\n    }\n\n    function single_quote(char) {\n        if (char === \"'\") {\n            state = start;\n        }\n        buffer += char;\n    }\n\n    function ini_parentheses() {\n        var o, trim_buffer = buffer.trim(),\n            special = xlsx_Fx[trim_buffer];\n        var special_raw = xlsx_raw_Fx[trim_buffer];\n        if (special_raw) {\n            special = new UserRawFnExecutor(special_raw, formula);\n        }\n        else if (special) {\n            special = new UserFnExecutor(special, formula);\n        }\n        else if (trim_buffer) {\n            //Error: \"Worksheet 1\"!D145: Function INDEX not found\n            throw new Error('\"' + formula.sheet_name + '\"!' + formula.name + ': Function ' + buffer + ' not found');\n        }\n        o = new Exp(formula);\n        fn_stack.push({\n            exp: o,\n            special: special\n        });\n        exp_obj = o;\n        buffer = '';\n    }\n\n    function end_parentheses() {\n        var v, stack = fn_stack.pop();\n        exp_obj = stack.exp;\n        exp_obj.push(buffer);\n        v = exp_obj;\n        buffer = '';\n        exp_obj = fn_stack[fn_stack.length - 1].exp;\n        if (stack.special) {\n            stack.special.push(v);\n            exp_obj.push(stack.special);\n        }\n        else {\n            exp_obj.push(v);\n        }\n    }\n\n    function add_operation(char) {\n        if (!was_string) {\n            exp_obj.push(buffer);\n        }\n        was_string = false;\n        exp_obj.push(char);\n        buffer = '';\n    }\n\n    function start(char) {\n        if (char === '\"') {\n            state = string;\n            buffer = '';\n        } else if (char === \"'\") {\n            state = single_quote;\n            buffer = \"'\";\n        } else if (char === '(') {\n            ini_parentheses();\n        } else if (char === ')') {\n            end_parentheses();\n        } else if (common_operations[char]) {\n            add_operation(char);\n        } else if (char === ',' && fn_stack[fn_stack.length - 1].special) {\n            was_string = false;\n            fn_stack[fn_stack.length - 1].exp.push(buffer);\n            fn_stack[fn_stack.length - 1].special.push(fn_stack[fn_stack.length - 1].exp);\n            fn_stack[fn_stack.length - 1].exp = exp_obj = new Exp(formula);\n            buffer = '';\n        } else if (char !== ' ') {\n            buffer += char;\n        }\n    }\n    \n    var state = start;\n\n    for (var i = 0; i < str_formula.length; i++) {\n        state(str_formula[i]);\n    }\n    root_exp.push(buffer);\n    return root_exp;\n\n}","\"use strict\";\n\nconst RawValue = require('./RawValue.js');\nconst Range = require('./Range.js');\nconst str_2_val = require('./str_2_val.js');\n\nconst MS_PER_DAY = 24 * 60 * 60 * 1000;\n\nvar exp_id = 0;\n\nmodule.exports = function Exp(formula) {\n    var self = this;\n    self.id = ++exp_id;\n    self.args = [];\n    self.name = 'Expression';\n    self.update_cell_value = update_cell_value;\n    self.formula = formula;\n    \n    function update_cell_value() {\n        try {\n            if (Array.isArray(self.args) \n                    && self.args.length === 1\n                    && self.args[0] instanceof Range) {\n                throw Error('#VALUE!');\n            }\n            formula.cell.v = self.calc();\n            formula.cell.t = getCellType(formula.cell.v);\n\n            if (Array.isArray(formula.cell.v)) {\n                const array = formula.cell.v;\n                if (!validateResultMatrix(array)) {\n                    throw new Error('#N/A');\n                }\n\n                const existingCell = formula.cell.name;\n                const existingCellLetter = existingCell.match(/[A-Z]+/)[0];\n                const existingCellNumber = existingCell.match(/[0-9]+/)[0];\n\n                for (let i = 0; i < array.length; i++) {\n                    const newCellNumber = parseInt(existingCellNumber) + i;\n\n                    for (let j = 0; j < array[i].length; j++) {\n                        const newCellValue = array[i][j];\n                        let newCellType = getCellType(newCellValue);\n\n                        // original cell\n                        if (i === 0 && j === 0) {\n                            formula.cell.v = newCellValue;\n                            if (newCellType) formula.cell.t = newCellType;\n                        } \n                        // other cells\n                        else {\n                            const newLetterIndex = existingCellLetter.charCodeAt(0) - 65 + j;\n                            const newCellLetter = getCellLetter(newLetterIndex);\n\n                            const newCell = newCellLetter + newCellNumber;\n                            formula.sheet[newCell] = {\n                                v: newCellValue,\n                                t: newCellType,\n                            };\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            var errorValues = {\n                '#NULL!': 0x00,\n                '#DIV/0!': 0x07,\n                '#VALUE!': 0x0F,\n                '#REF!': 0x17,\n                '#NAME?': 0x1D,\n                '#NUM!': 0x24,\n                '#N/A': 0x2A,\n                '#GETTING_DATA': 0x2B\n            };\n            if (errorValues[e.message] !== undefined) {\n                formula.cell.t = 'e';\n                formula.cell.w = e.message;\n                formula.cell.v = errorValues[e.message];\n            }\n            else {\n                throw e;\n            }\n        }\n        finally {\n            formula.status = 'done';\n        }\n    }\n\n    function getCellLetter(columnIndex) {\n        let newCellLetter = '';\n        while (newLetterIndex >= 0) {\n            newCellLetter = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[newLetterIndex % 26] + newCellLetter;\n            newLetterIndex = Math.floor(newLetterIndex / 26) - 1;\n        }\n    }\n\n    function getCellType(cellValue) {\n        if (typeof(cellValue) === 'string') {\n            return 's';\n        }\n        else if (typeof(cellValue) === 'number') {\n            return 'n';\n        }\n    }\n\n    function validateResultMatrix(result) {\n        // array must be greater than 0 and be symmetrical\n        if (Array.isArray(result)) {\n            for (let i = 0; i < result.length; i++) {\n                if (!(result[i] instanceof Array)) {\n                    return false;\n                }\n                if (result[i].length !== result[0].length) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isEmpty(value) {\n        return value === undefined || value === null || value === \"\";\n    }\n    \n    function checkVariable(obj) {\n        if (typeof obj.calc !== 'function') {\n            throw new Error('Undefined ' + obj);\n        }\n    }\n\n    function getCurrentCellIndex() {\n        return +self.formula.name.replace(/[^0-9]/g, '');\n    }\n    \n    function exec(op, args, fn) {\n        for (var i = 0; i < args.length; i++) {\n            if (args[i] === op) {\n                try {\n                    if (i===0 && op==='+') {\n                        checkVariable(args[i + 1]);\n                        let r = args[i + 1].calc();\n                        args.splice(i, 2, new RawValue(r));\n                    } else {\n                        checkVariable(args[i - 1]);\n                        checkVariable(args[i + 1]);\n\n                        let a = args[i - 1].calc();\n                        let b = args[i + 1].calc();\n                        if (Array.isArray(a)) {\n                            a = a[getCurrentCellIndex() - 1][0];\n                        }\n                        if (Array.isArray(b)) {\n                            b = b[getCurrentCellIndex() - 1][0];\n                        }\n\n                        let r = fn(a, b);\n                        args.splice(i - 1, 3, new RawValue(r));\n                        i--;\n                    }\n                }\n                catch (e) {\n                    // console.log('[Exp.js] - ' + formula.name + ': evaluating ' + formula.cell.f + '\\n' + e.message);\n                    throw e;\n                }\n            }\n        }\n    }\n\n    function exec_minus(args) {\n        for (var i = args.length; i--;) {\n            if (args[i] === '-') {\n                checkVariable(args[i + 1]);\n                var b = args[i + 1].calc();\n                if (i > 0 && typeof args[i - 1] !== 'string') {\n                    args.splice(i, 1, '+');\n                    if (b instanceof Date) {\n                        b = Date.parse(b);\n                        checkVariable(args[i - 1]);\n                        var a = args[i - 1].calc();\n                        if (a instanceof Date) {\n                            a = Date.parse(a) / MS_PER_DAY;\n                            b = b / MS_PER_DAY;\n                            args.splice(i - 1, 1, new RawValue(a));\n                        }\n                    }\n                    args.splice(i + 1, 1, new RawValue(-b));\n                }\n                else {\n                    if (typeof b === 'string') {\n                        throw new Error('#VALUE!');\n                    }\n                    args.splice(i, 2, new RawValue(-b));\n                }\n            }\n        }\n    }\n\n    self.calc = function() {\n        let args = self.args.concat();\n        exec('^', args, function(a, b) {\n            return Math.pow(+a, +b);\n        });\n        exec_minus(args);\n        exec('/', args, function(a, b) {\n            if (b == 0) {\n                throw Error('#DIV/0!');\n            }\n            return (+a) / (+b);\n        });\n        exec('*', args, function(a, b) {\n            return (+a) * (+b);\n        });\n        exec('+', args, function(a, b) {\n            if (a instanceof Date && typeof b === 'number') {\n                b = b * MS_PER_DAY;\n            }\n            return (+a) + (+b);\n        });\n        exec('&', args, function(a, b) {\n            return '' + a + b;\n        });\n        exec('<', args, function(a, b) {\n            return a < b;\n        });\n        exec('>', args, function(a, b) {\n            return a > b;\n        });\n        exec('>=', args, function(a, b) {\n            return a >= b;\n        });\n        exec('<=', args, function(a, b) {\n            return a <= b;\n        });\n        exec('<>', args, function(a, b) {\n            if (a instanceof Date && b instanceof Date) {\n                return a.getTime() !== b.getTime();\n            }\n            if (isEmpty(a) && isEmpty(b)) {\n                return false;\n            }\n            return a !== b;\n        });\n        exec('=', args, function(a, b) {\n            if (a instanceof Date && b instanceof Date) {\n                return a.getTime() === b.getTime();\n            }\n            if (isEmpty(a) && isEmpty(b)) {\n                return true;\n            }\n            if ((a == null && b === 0) || (a === 0 && b == null)) {\n                return true;\n            }\n            if (typeof a === 'string' && typeof b === 'string' && a.toLowerCase() === b.toLowerCase()) {\n                return true;\n            }\n            return a === b;\n        });\n        if (args.length == 1) {\n            if (typeof(args[0].calc) !== 'function') {\n                return args[0];\n            }\n            else {\n                return args[0].calc();\n            }\n        }\n    };\n\n    var last_arg;\n    self.push = function(buffer) {\n        if (buffer) {\n            var v = str_2_val(buffer, formula);\n            if (((v === '=') && (last_arg == '>' || last_arg == '<')) || (last_arg == '<' && v === '>')) {\n                self.args[self.args.length - 1] += v;\n            }\n            else {\n                self.args.push(v);\n            }\n            last_arg = v;\n            //console.log(self.id, '-->', v);\n        }\n    };\n};","\"use strict\";\n\nmodule.exports = function LazyValue(fn) {\n    this.calc = function() {\n        return fn();\n    };\n};\n","\"use strict\";\n\nmodule.exports = function UserFnExecutor(user_function) {\n    var self = this;\n    self.name = 'UserFn';\n    self.args = [];\n    self.calc = function() {\n        var errorValues = {\n            '#NULL!': 0x00,\n            '#DIV/0!': 0x07,\n            '#VALUE!': 0x0F,\n            '#REF!': 0x17,\n            '#NAME?': 0x1D,\n            '#NUM!': 0x24,\n            '#N/A': 0x2A,\n            '#GETTING_DATA': 0x2B\n        }, result;\n        try {\n            result = user_function.apply(self, self.args.map(f=>f.calc()));\n        } catch (e) {\n            if (user_function.name === 'is_blank'\n                && errorValues[e.message] !== undefined) {\n                // is_blank applied to an error cell doesn't propagate the error\n                result = 0;\n            }\n            else if (user_function.name === 'iserror'\n                && errorValues[e.message] !== undefined) {\n                // iserror applied to an error doesn't propagate the error and returns true\n                result = true;\n            }\n            else {\n                throw e;\n            }\n        }\n        return result;\n    };\n    self.push = function(buffer) {\n        self.args.push(buffer);\n    };\n};","\"use strict\";\n\nmodule.exports = function UserRawFnExecutor(user_function, formula) {\n    var self = this;\n    self.name = 'UserRawFn';\n    self.args = [];\n    self.calc = function() {\n        try {\n            return user_function.apply(self, self.args);\n        } catch(e) {\n            // debug\n            // console.log('----------------', user_function);\n            // console.log(formula.name);\n            // console.log(self);\n            throw e;\n        }\n    };\n    self.push = function(buffer) {\n        self.args.push(buffer);\n    };\n};\n","\"use strict\";\n\n// +---------------------+\n// | FORMULAS REGISTERED |\n// +---------------------+\nlet formulas = {\n    'FLOOR': Math.floor,\n    '_xlfn.FLOOR.MATH': Math.floor,\n    'FLOOR.MATH': Math.floor,\n    'ABS': Math.abs,\n    'SQRT': Math.sqrt,\n    'VLOOKUP': vlookup,\n    'MAX': max,\n    'SUM': sum,\n    'MIN': min,\n    'CONCATENATE': concatenate,\n    'PMT': pmt,\n    'COUNTA': counta,\n    'IRR': irr,\n    'NORM.INV': normsInv,\n    '_xlfn.NORM.INV': normsInv,\n    'STDEV': stDeviation,\n    'AVERAGE': avg,\n    'EXP': EXP,\n    'LN': Math.log,\n    '_xlfn.VAR.P': var_p,\n    'VAR.P': var_p,\n    '_xlfn.COVARIANCE.P': covariance_p,\n    'COVARIANCE.P': covariance_p,\n    'TRIM': trim,\n    'LEN': len,\n    'ISBLANK': is_blank,\n    'HLOOKUP': hlookup,\n    'INDEX': index,\n    'MATCH': match,\n    'SUMPRODUCT': sumproduct,\n    'ISNUMBER': isnumber,\n    'TODAY': today,\n    'ISERROR': iserror,\n    'TIME': time,\n    'DAY': day,\n    'MONTH': month,\n    'YEAR': year,\n    'RIGHT': right,\n    'LEFT': left,\n    'IFS': ifs,\n    'ROUND': round,\n    'CORREL': correl, // missing test\n    'SUMIF': sumif, // missing test,\n    'CHOOSE': choose,\n    'SUBSTITUTE': substitute,\n    'CEILING': ceiling,\n};\n\nfunction choose(option) {\n    return arguments[option];\n}\n\nfunction sumif(){\n\n    let elementToSum = arguments[1];\n    let sumResult = 0;\n\n    [].slice.call(arguments)[0][0].forEach((elt,key) =>{\n        \n        if (elt!==null){\n            //if the element is not a string but a number, number has no replace function, so converting to string.\n            elt = elt.toString();\n            if( elt.replace(/\\'/g, \"\") === elementToSum){\n                if (!isNaN([].slice.call(arguments)[2][0][key])){\n                    sumResult += [].slice.call(arguments)[2][0][key]\n                }\n            }\n        }\n    });\n    return sumResult\n}\n\nfunction correl(a,b){\n\n    a = getArrayOfNumbers(a);\n    b = getArrayOfNumbers(b);\n\n    if (a.length !== b.length) {\n        return 'N/D';\n    }\n    var inv_n = 1.0 / (a.length-1);\n    var avg_a = sum.apply(this, a) / a.length;\n    var avg_b = sum.apply(this, b) / b.length;\n    var s = 0.0;\n    var sa = 0;\n    var sb=0;\n    for (var i = 0; i < a.length; i++) {\n        s += (a[i] - avg_a) * (b[i] - avg_b);\n\n        sa+=Math.pow(a[i],2);\n        sb+=Math.pow(b[i],2);\n    }\n\n    sa=Math.sqrt(sa/inv_n);\n    sb=Math.sqrt(sb/inv_n);\n\n    return s / (inv_n*sa*sb);\n}\n\nfunction round(value, decimalPlaces) {\n    if (arguments.length === 0) throw new Error(\"Err:511\");\n    if (arguments.length === 1) return Math.round(value);\n    let roundMeasure = Math.pow(10, decimalPlaces);\n    return Math.round(roundMeasure*value)/roundMeasure\n}\n\nfunction today() {\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return today;\n}\n\nfunction isnumber(x) {\n    return !isNaN(x);\n}\n\nfunction sumproduct() {\n    var parseNumber = function (string) {\n        if (string === undefined || string === '' || string === null) {\n            return 0;\n        }\n        if (!isNaN(string)) {\n            return parseFloat(string);\n        }\n        return 0;\n    },\n    consistentSizeRanges = function (matrixArray) {\n        var getRowCount = function(matrix) {\n                return matrix.length;\n            },\n            getColCount = function(matrix) {\n                return matrix[0].length;\n            },\n            rowCount = getRowCount(matrixArray[0]),\n            colCount = getColCount(matrixArray[0]);\n\n        for (var i = 1; i < matrixArray.length; i++) {\n            if (getRowCount(matrixArray[i]) !== rowCount\n                || getColCount(matrixArray[i]) !== colCount) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    if (!arguments || arguments.length === 0) {\n        throw Error('#VALUE!');\n    }\n    if (!consistentSizeRanges(arguments)) {\n        throw Error('#VALUE!');\n    }\n    // throw error if any of the cells passed in arguments is in error\n    for (var i = 0; i < arguments.length; i++) {\n        var row = arguments[i];\n        if (Array.isArray(row)) {\n            for (var j = 0; j < row.length; j++) {\n                var col = row[j];\n                if (Array.isArray(col)) {\n                    for (var k = 0; k < col.length; k++) {\n                        var cell = col[k];\n                        if (cell && typeof cell === 'object' && cell.t === 'e') {\n                            throw Error(cell.w);\n                        }\n                    }\n                }\n                else {\n                    var cell = col;\n                    if (cell && typeof cell === 'object' && cell.t === 'e') {\n                        throw Error(cell.w);\n                    }\n                }\n            }\n        }\n        else {\n            var cell = row;\n            if (cell && typeof cell === 'object' && cell.t === 'e') {\n                throw Error(cell.w);\n            }\n        }\n    }\n\n    var arrays = arguments.length + 1;\n    var result = 0;\n    var product;\n    var k;\n    var _i;\n    var _ij;\n    for (var i = 0; i < arguments[0].length; i++) {\n        if (!(arguments[0][i] instanceof Array)) {\n            product = 1;\n            for (k = 1; k < arrays; k++) {\n                _i = parseNumber(arguments[k - 1][i]);\n\n                product *= _i;\n            }\n            result += product;\n        } else {\n            for (var j = 0; j < arguments[0][i].length; j++) {\n                product = 1;\n                for (k = 1; k < arrays; k++) {\n                    _ij = parseNumber(arguments[k - 1][i][j]);\n\n                    product *= _ij;\n                }\n                result += product;\n            }\n        }\n    }\n    return result;\n}\n\nfunction match_less_than_or_equal(matrix, lookupValue) {\n    var index;\n    var indexValue;\n    for (var idx = 0; idx < matrix.length; idx++) {\n        if (matrix[idx] === lookupValue) {\n            return idx + 1;\n        } else if (matrix[idx] < lookupValue) {\n            if (!indexValue) {\n                index = idx + 1;\n                indexValue = matrix[idx];\n            } else if (matrix[idx] > indexValue) {\n                index = idx + 1;\n                indexValue = matrix[idx];\n            }\n        }\n    }\n    if (!index) {\n        throw Error('#N/A');\n    }\n    return index;\n}\n\nfunction match_exactly_string(matrix, lookupValue) {\n    for (var idx = 0; idx < matrix.length; idx++) {\n        lookupValue = lookupValue.replace(/\\?/g, '.');\n        if (Array.isArray(matrix[idx])) {\n            if (matrix[idx].length === 1\n                && typeof matrix[idx][0] === 'string') {\n                    if (matrix[idx][0].toLowerCase() === lookupValue.toLowerCase()) {\n                        return idx + 1;\n                    }\n                }\n        } else if (typeof matrix[idx] === 'string') {\n            if (matrix[idx].toLowerCase() === lookupValue.toLowerCase()) {\n                return idx + 1;\n            }\n        }\n\n    }\n    throw Error('#N/A');\n}\n\nfunction match_exactly_non_string(matrix, lookupValue) {\n    for (var idx = 0; idx < matrix.length; idx++) {\n        if (Array.isArray(matrix[idx])) {\n            if (matrix[idx].length === 1) {\n                if (matrix[idx][0] === lookupValue) {\n                    return idx + 1;\n                }\n            }\n        } else if (matrix[idx] === lookupValue) {\n            return idx + 1;\n        }\n    }\n    throw Error('#N/A');\n}\n\n// +---------------------+\n// | THE IMPLEMENTATIONS |\n// +---------------------+\n\n\nfunction match_greater_than_or_equal(matrix, lookupValue) {\n    var index;\n    var indexValue;\n    for (var idx = 0; idx < matrix.length; idx++) {\n        if (Array.isArray(matrix[idx]) && matrix[idx].length > 0) {\n            // For array in column\n            if (matrix[idx][0] === lookupValue) {\n                return idx + 1;\n            } else if (matrix[idx][0] > lookupValue) {\n                if (!indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx][0];\n                } else if (matrix[idx][0] < indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx][0];\n                }\n            }\n        } else {\n            // For array in row\n            if (matrix[idx] === lookupValue) {\n                return idx + 1;\n            } else if (matrix[idx] > lookupValue) {\n                if (!indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx];\n                } else if (matrix[idx] < indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx];\n                }\n            }\n        }\n    }\n    if (!index) {\n        throw Error('#N/A');\n    }\n    return index;\n}\n\nfunction match(lookupValue, matrix, matchType) {\n    if (Array.isArray(matrix)\n        && matrix.length === 1\n        && Array.isArray(matrix[0])) {\n        matrix = matrix[0];\n    }\n    if (!lookupValue && !matrix) {\n        throw Error('#N/A');\n    }\n    if (arguments.length === 2) {\n        matchType = 1;\n    }\n    if (!(matrix instanceof Array)) {\n        throw Error('#N/A');\n    }\n    if (matchType === 0) {\n        if (typeof lookupValue === 'string') {\n            return match_exactly_string(matrix, lookupValue);\n        } else {\n            return match_exactly_non_string(matrix, lookupValue);\n        }\n    } else if (matchType === 1) {\n        return match_less_than_or_equal(matrix, lookupValue);\n    } else if (matchType === -1) {\n        return match_greater_than_or_equal(matrix, lookupValue);\n    } else {\n        throw Error('#N/A');\n    }\n}\n\nfunction index(matrix, row_num, column_num) {\n    if (row_num <= matrix.length) {\n        var row = matrix[row_num - 1];\n        if (Array.isArray(row)) {\n            if (!column_num) {\n                return row;\n            } else if (column_num <= row.length) {\n                return row[column_num - 1];\n            }\n        } else {\n            return matrix[row_num];\n        }\n    }\n    throw Error('#REF!');\n}\n\n// impl ported from https://github.com/FormulaPages/hlookup\nfunction hlookup(needle, table, index, exactmatch) {\n    if (typeof needle === \"undefined\" || (0, is_blank)(needle)) {\n        throw Error('#N/A');\n    }\n\n    index = index || 0;\n    let row = table[0], i, searchingFor;\n\n    if (typeof needle === 'string') {\n        searchingFor = needle.toLowerCase();\n        for (i = 0; i < row.length; i++) {\n            if (exactmatch && row[i] === searchingFor || row[i].toLowerCase().indexOf(searchingFor) !== -1) {\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\n            }\n        }\n    } else {\n        searchingFor = needle;\n        for (i = 0; i < row.length; i++) {\n            if (exactmatch && row[i] === searchingFor || row[i] === searchingFor) {\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\n            }\n        }\n    }\n    throw Error('#N/A');\n}\n\nfunction len(a) {\n    return ('' + a).length;\n}\n\nfunction trim(a) {\n    return ('' + a).trim();\n}\n\nfunction is_blank(a) {\n    // console.log(a)\n    return !a;\n}\n\nfunction covariance_p(a, b) {\n    a = getArrayOfNumbers(a);\n    b = getArrayOfNumbers(b);\n    if (a.length != b.length) {\n        return 'N/D';\n    }\n    var inv_n = 1.0 / a.length;\n    var avg_a = sum.apply(this, a) / a.length;\n    var avg_b = sum.apply(this, b) / b.length;\n    var s = 0.0;\n    for (var i = 0; i < a.length; i++) {\n        s += (a[i] - avg_a) * (b[i] - avg_b);\n    }\n    return s * inv_n;\n}\n\nfunction getArrayOfNumbers(range) {\n    var arr = [];\n    for (var i = 0; i < range.length; i++) {\n        var arg = range[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                if (typeof(matrix[j]) == 'number') {\n                    arr.push(matrix[j]);\n                }\n                else if (Array.isArray(matrix[j])) {\n                    for (var k = matrix[j].length; k--;) {\n                        if (typeof(matrix[j][k]) == 'number') {\n                            arr.push(matrix[j][k]);\n                        }\n                    }\n                }\n                // else {\n                //   wtf is that?\n                // }\n            }\n        }\n        else {\n            if (typeof(arg) == 'number') {\n                arr.push(arg);\n            }\n        }\n    }\n    return arr;\n}\n\nfunction var_p() {\n    var average = avg.apply(this, arguments);\n    var s = 0.0;\n    var c = 0;\n    for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                for (var k = matrix[j].length; k--;) {\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\n                        s += Math.pow(matrix[j][k] - average, 2);\n                        c++;\n                    }\n                }\n            }\n        }\n        else {\n            s += Math.pow(arg - average, 2);\n            c++;\n        }\n    }\n    return s / c;\n}\n\nfunction EXP(n) {\n    return Math.pow(Math.E, n);\n}\n\nfunction avg() {\n    var aux = counta.apply(this, arguments);\n    if (aux == 0) {\n        throw Error('#DIV/0!');\n    }\n    return sum.apply(this, arguments) / aux;\n}\n\nfunction stDeviation() {\n    var array = getArrayOfNumbers(arguments);\n\n    function _mean(array) {\n        return array.reduce(function(a, b) {\n            return a + b;\n        }) / array.length;\n    }\n    var mean = _mean(array),\n        dev = array.map(function(itm) {\n            return (itm - mean) * (itm - mean);\n        });\n    return Math.sqrt(dev.reduce(function(a, b) {\n        return a + b;\n    }) / (array.length - 1));\n}\n\n/// Original C++ implementation found at http://www.wilmott.com/messageview.cfm?catid=10&threadid=38771\n/// C# implementation found at http://weblogs.asp.net/esanchez/archive/2010/07/29/a-quick-and-dirty-implementation-of-excel-norminv-function-in-c.aspx\n/*\n *     Compute the quantile function for the normal distribution.\n *\n *     For small to moderate probabilities, algorithm referenced\n *     below is used to obtain an initial approximation which is\n *     polished with a final Newton step.\n *\n *     For very large arguments, an algorithm of Wichura is used.\n *\n *  REFERENCE\n *\n *     Beasley, J. D. and S. G. Springer (1977).\n *     Algorithm AS 111: The percentage points of the normal distribution,\n *     Applied Statistics, 26, 118-121.\n *\n *      Wichura, M.J. (1988).\n *      Algorithm AS 241: The Percentage Points of the Normal Distribution.\n *      Applied Statistics, 37, 477-484.\n */\nfunction normsInv(p, mu, sigma) {\n    if (p < 0 || p > 1) {\n        throw \"The probality p must be bigger than 0 and smaller than 1\";\n    }\n    if (sigma < 0) {\n        throw \"The standard deviation sigma must be positive\";\n    }\n\n    if (p == 0) {\n        return -Infinity;\n    }\n    if (p == 1) {\n        return Infinity;\n    }\n    if (sigma == 0) {\n        return mu;\n    }\n\n    var q, r, val;\n\n    q = p - 0.5;\n\n    /*-- use AS 241 --- */\n    /* double ppnd16_(double *p, long *ifault)*/\n    /*      ALGORITHM AS241  APPL. STATIST. (1988) VOL. 37, NO. 3\n            Produces the normal deviate Z corresponding to a given lower\n            tail area of P; Z is accurate to about 1 part in 10**16.\n    */\n    if (Math.abs(q) <= .425) { /* 0.075 <= p <= 0.925 */\n        r = .180625 - q * q;\n        val =\n            q * (((((((r * 2509.0809287301226727 +\n                            33430.575583588128105) * r + 67265.770927008700853) * r +\n                        45921.953931549871457) * r + 13731.693765509461125) * r +\n                    1971.5909503065514427) * r + 133.14166789178437745) * r +\n                3.387132872796366608) / (((((((r * 5226.495278852854561 +\n                        28729.085735721942674) * r + 39307.89580009271061) * r +\n                    21213.794301586595867) * r + 5394.1960214247511077) * r +\n                687.1870074920579083) * r + 42.313330701600911252) * r + 1);\n    }\n    else { /* closer than 0.075 from {0,1} boundary */\n\n        /* r = min(p, 1-p) < 0.075 */\n        if (q > 0)\n            r = 1 - p;\n        else\n            r = p;\n\n        r = Math.sqrt(-Math.log(r));\n        /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */\n\n        if (r <= 5) { /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */\n            r += -1.6;\n            val = (((((((r * 7.7454501427834140764e-4 +\n                                .0227238449892691845833) * r + .24178072517745061177) *\n                            r + 1.27045825245236838258) * r +\n                        3.64784832476320460504) * r + 5.7694972214606914055) *\n                    r + 4.6303378461565452959) * r +\n                1.42343711074968357734) / (((((((r *\n                                1.05075007164441684324e-9 + 5.475938084995344946e-4) *\n                            r + .0151986665636164571966) * r +\n                        .14810397642748007459) * r + .68976733498510000455) *\n                    r + 1.6763848301838038494) * r +\n                2.05319162663775882187) * r + 1);\n        }\n        else { /* very close to  0 or 1 */\n            r += -5;\n            val = (((((((r * 2.01033439929228813265e-7 +\n                                2.71155556874348757815e-5) * r +\n                            .0012426609473880784386) * r + .026532189526576123093) *\n                        r + .29656057182850489123) * r +\n                    1.7848265399172913358) * r + 5.4637849111641143699) *\n                r + 6.6579046435011037772) / (((((((r *\n                            2.04426310338993978564e-15 + 1.4215117583164458887e-7) *\n                        r + 1.8463183175100546818e-5) * r +\n                    7.868691311456132591e-4) * r + .0148753612908506148525) * r + .13692988092273580531) * r +\n                .59983220655588793769) * r + 1);\n        }\n\n        if (q < 0.0) {\n            val = -val;\n        }\n    }\n\n    return mu + sigma * val;\n}\n\nfunction irr(range, guess) {\n    var min = -2.0;\n    var max = 1.0;\n    var n = 0;\n    do {\n        var guest = (min + max) / 2;\n        var NPV = 0;\n        for (var i = 0; i < range.length; i++) {\n            var arg = range[i];\n            NPV += arg[0] / Math.pow((1 + guest), i);\n        }\n        if (NPV > 0) {\n            if (min === max) {\n                max += Math.abs(guest);\n            }\n            min = guest;\n        }\n        else {\n            max = guest;\n        }\n        n++;\n    } while (Math.abs(NPV) > 0.000001 && n < 100000);\n    //console.log(n);\n    return guest;\n}\n\nfunction counta() {\n    var r = 0;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                for (var k = matrix[j].length; k--;) {\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\n                        r++;\n                    }\n                }\n            }\n        }\n        else {\n            if (arg !== null && arg !== undefined) {\n                r++;\n            }\n        }\n    }\n    return r;\n}\n\nfunction pmt(rate_per_period, number_of_payments, present_value, future_value, type) {\n    type = type || 0;\n    future_value = future_value || 0;\n    if (rate_per_period != 0.0) {\n        // Interest rate exists\n        var q = Math.pow(1 + rate_per_period, number_of_payments);\n        return -(rate_per_period * (future_value + (q * present_value))) / ((-1 + q) * (1 + rate_per_period * (type)));\n\n    }\n    else if (number_of_payments != 0.0) {\n        // No interest rate, but number of payments exists\n        return -(future_value + present_value) / number_of_payments;\n    }\n    return 0;\n}\n\nfunction concatenate() {\n    var r = '';\n    for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (arg === null || arg === undefined) continue;\n        r += arg;\n    }\n    return r;\n}\n\nfunction sum() {\n    var r = 0;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                for (var k = matrix[j].length; k--;) {\n                    if (!isNaN(matrix[j][k])) {\n                        r += +matrix[j][k];\n                    }\n                }\n            }\n        }\n        else {\n            r += +arg;\n        }\n    }\n    return r;\n}\n\nfunction max() {\n    var max = null;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var arr = arg;\n            for (var j = arr.length; j--;) {\n                var col = arr[j];\n                if (Array.isArray(col)) {\n                    for (var k = col.length; k--;) {\n                        if (max == null || (col[k] != null && max < col[k])) {\n                            max = col[k];\n                        }\n                    }\n                }\n                else if (max == null || (col != null && max < col)) {\n                    max = col;\n                }\n            }\n        }\n        else if (!isNaN(arg) && (max == null || (arg != null && max < arg))) {\n            max = arg;\n        }\n    }\n    return max;\n}\n\nfunction min() {\n    var min = null;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var arr = arg;\n            for (var j = arr.length; j--;) {\n                var col = arr[j];\n                if (Array.isArray(col)) {\n                    for (var k = col.length; k--;) {\n                        if (min == null || (col[k] != null && min > col[k])) {\n                            min = col[k];\n                        }\n                    }\n                }\n                else if (min == null || (col != null && min > col)) {\n                    min = col;\n                }\n            }\n        }\n        else if (!isNaN(arg) && (min == null || (arg != null && min > arg))) {\n            min = arg;\n        }\n    }\n    return min;\n}\n\nfunction vlookup(key, matrix, return_index, range_lookup=true) {\n    var val = null;\n    for (var i = 0; i < matrix.length; i++) {\n        if (matrix[i][0] < key) {\n            val = matrix[i][return_index - 1];\n        }\n        else if (matrix[i][0] == key) {\n            return matrix[i][return_index - 1];\n        }\n    }\n    if (range_lookup && val) {\n        return val;\n    }\n    throw Error('#N/A');\n}\n\nfunction iserror() {\n    // if an error is catched before getting there, true will be returned from the catch block\n    // if we get here then it's not an error\n    return false;\n}\n\nfunction time(hours, minutes, seconds) {\n    const MS_PER_DAY = 24 * 60 * 60 * 1000;\n    return ((hours * 60 + minutes) * 60 + seconds) * 1000 / MS_PER_DAY;\n}\n\nfunction day(date) {\n    if (!date.getDate) {\n        throw Error('#VALUE!');\n    }\n    var day = date.getDate();\n    if (isNaN(day)) {\n        throw Error('#VALUE!');\n    }\n    return day;\n}\n\nfunction month(date) {\n    if (!date.getMonth) {\n        throw Error('#VALUE!');\n    }\n    var month = date.getMonth();\n    if (isNaN(month)) {\n        throw Error('#VALUE!');\n    }\n    return month + 1;\n}\n\nfunction year(date) {\n    if (!date.getFullYear) {\n        throw Error('#VALUE!');\n    }\n    var year = date.getFullYear();\n    if (isNaN(year)) {\n        throw Error('#VALUE!');\n    }\n    return year;\n}\n\nfunction right(text, number) {\n    number = (number === undefined) ? 1 : parseFloat(number);\n\n    if (isNaN(number)) {\n        throw Error('#VALUE!');\n    }\n    if (text === undefined || text === null) {\n        text = '';\n    } else {\n        text = '' + text;\n    }\n    return text.substring(text.length - number);\n}\n\nfunction left(text, number) {\n    number = (number === undefined) ? 1 : parseFloat(number);\n\n    if (isNaN(number)) {\n        throw Error('#VALUE!');\n    }\n    if (text === undefined || text === null) {\n        text = '';\n    } else {\n        text = '' + text;\n    }\n    return text.substring(0, number);\n}\n\nfunction ifs(/*_cond1, _val1, _cond2, _val2, _cond3, _val3, ... */) {\n    for (var i = 0; i + 1 < arguments.length; i+=2) {\n        var cond = arguments[i];\n        var val = arguments[i+1];\n        if (cond) {\n            return val;\n        }\n    }\n    throw Error('#N/A');\n}\n\nfunction escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n\nfunction substitute(text, old_text, new_text, occurrence) {\n    if(occurrence <= 0) {\n      throw Error('#VALUE!');\n    }\n    if (!text || !old_text || (!new_text && new_text !== '')) {\n      return text;\n    } else if (occurrence === undefined) {\n      return text.replace(new RegExp(escapeRegExp(old_text), 'g'), new_text);\n    } else {\n      var index = 0;\n      var i = 0;\n      while (text.indexOf(old_text, index) > 0) {\n        index = text.indexOf(old_text, index + 1);\n        i++;\n        if (i === occurrence) {\n          return text.substring(0, index) + new_text + text.substring(index + old_text.length);\n        }\n      }\n    }\n  };\n\nfunction ceiling(number, significance) {\n    return Math.ceil(number / significance) * significance\n}\n\nmodule.exports = formulas;\n","\"use strict\";\n\nconst int_2_col_str = require('./int_2_col_str.js');\nconst col_str_2_int = require('./col_str_2_int.js');\nconst RawValue = require('./RawValue.js');\nconst Range = require('./Range.js');\nconst RefValue = require('./RefValue.js');\n\nfunction raw_offset(cell_ref, rows, columns, height, width) {\n    height = (height || new RawValue(1)).calc();\n    width = (width || new RawValue(1)).calc();\n    if (cell_ref.args.length === 1 && cell_ref.args[0].name === 'RefValue') {\n        var ref_value = cell_ref.args[0];\n        var parsed_ref = ref_value.parseRef();\n        var col = col_str_2_int(parsed_ref.cell_name) + columns.calc();\n        var col_str = int_2_col_str(col);\n        var row = +parsed_ref.cell_name.replace(/^[A-Z]+/g, '') + rows.calc();\n        var cell_name = parsed_ref.sheet_name + '!' + col_str + row;\n        if (height === 1 && width === 1) {\n            return new RefValue(cell_name, ref_value.formula).calc();\n        }\n        else {\n            var end_range_col = int_2_col_str(col + width - 1);\n            var end_range_row = row + height - 1;\n            var end_range = end_range_col + end_range_row;\n            var str_expression = cell_name + ':' + end_range;\n            return new Range(str_expression, ref_value.formula).calc();\n        }\n    }\n}\n\nfunction iferror(cell_ref, onerrorvalue) {\n    try {\n        var value = cell_ref.calc();\n        if (typeof value === 'number' && (isNaN(value) || value === Infinity || value === -Infinity)) {\n            return onerrorvalue.calc();\n        }\n        return value;\n    } catch (e) {\n        return onerrorvalue.calc();\n    }\n}\n\nfunction _if(condition, _then, _else) {\n    if (condition.calc()) {\n        // console.log(condition.formula.name)\n        // if (condition.formula.name === 'P40') {\n        //     console.log('P40 =', _then.calc());\n        //     console.log(' -->', _then.args[1].calc());\n        // }\n        return _then.calc();\n    }\n    else {\n        if (typeof _else === 'undefined') {\n            return false;\n        } else {\n            return _else.calc();\n        }\n    }\n}\n\nfunction and() {\n    for (var i = 0; i < arguments.length; i++) {\n        if (!arguments[i].calc()) return false;\n    }\n    return true;\n}\n\nfunction _or() {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i].calc()) return true;\n    }\n    return false;\n}\n\nfunction transpose(expressionWithRange) {\n    let range = expressionWithRange.args[0];\n    // console.log(expressionWithRange.args[0])\n    // console.log(expressionWithRange.formula.wb.Sheets.Sheet1)\n    // console.log(range.calc())\n    let matrix = range.calc();\n    let cellName = expressionWithRange.formula.name;\n    let colRow = cellName.match(/([A-Z]+)([0-9]+)/);\n    let sheet = expressionWithRange.formula.sheet;\n    // console.log(colRow[1], colRow[2]);\n    // console.log(col_str_2_int(colRow[1]));\n    let colNumber = col_str_2_int(colRow[1]);\n    let rowNumber = +colRow[2];\n    for (let i = 0; i < matrix.length; i++) {\n        let matrixRow = matrix[i];\n        for (let j = 0; j < matrixRow.length; j++) {\n            let destinationColumn = colNumber + i;\n            let destinationRow = rowNumber + j;\n            let value = matrixRow[j];\n            // console.log(int_2_col_str(destinationColumn), destinationRow, value);\n            sheet[int_2_col_str(destinationColumn) + destinationRow].v = value;\n        }\n    }\n    // console.log(expressionWithRange.formula.name)\n    return matrix[0][0];\n}\n\nfunction filter(range, condition) {\n    let data = range.calc();\n    let conditions = condition.calc();\n    let cellName = range.formula.name;\n    let colAndRow = cellName.match(/([A-Z]+)([0-9]+)/);\n    let sheet = range.formula.sheet;\n    let colNumber = col_str_2_int(colAndRow[1]);\n    let rowNumber = +colAndRow[2];\n\n    let returnValue = sheet[cellName].v;\n    for (let i = 0; i < conditions[0].length; i++) {\n        if (conditions[0][i]) {\n            for (let row = 0; row < data.length; row++) {\n                let destinationColumn = colNumber + i;\n                let destinationRow = rowNumber + row;\n                let destinationCellName = int_2_col_str(destinationColumn) + destinationRow;\n\n                if (sheet[destinationCellName]) {\n                    sheet[destinationCellName].v = data[row][i];\n                    if (destinationCellName === cellName) {\n                        returnValue = data[row][i];\n                    }\n                } else {\n                    sheet[destinationCellName] = { v: data[row][i] };\n                }\n            }\n        }\n    }\n    return returnValue;\n}\n\nmodule.exports = {\n    'OFFSET': raw_offset,\n    'IFERROR': iferror,\n    'IF': _if,\n    'AND': and,\n    'OR': _or,\n    'TRANSPOSE': transpose,\n    'FILTER': filter\n};\n","\"use strict\";\n\nconst RawValue = require('./RawValue.js');\nconst str_2_val = require('./str_2_val.js');\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\n\nclass Calculator {\n    \n    constructor(workbook, exec_formula) {\n        this.workbook = workbook;\n        this.expressions = [];\n        this.exec_formula = exec_formula;\n        this.variables = {};\n        this.formulas = find_all_cells_with_formulas(workbook, exec_formula);\n        for (let i = this.formulas.length - 1; i >= 0; i--) {\n            let exp = exec_formula.build_expression(this.formulas[i]);\n            this.expressions.push(exp);\n        }\n        this.calcNames();\n    }\n    \n    setVar(var_name, value) {\n        let variable = this.variables[var_name];\n        if (variable) {\n            variable.setValue(value);\n        } else {\n            this.expressions.forEach(exp => {\n                this.setVarOfExpression(exp, var_name, value);\n            });\n        }\n    }\n    \n    getVars() {\n        let vars = {};\n        for (let k in this.variables) {\n            vars[k] = this.variables[k].calc();\n        }\n        return vars;\n    }\n    \n    calcNames() {\n        if (!this.workbook || !this.workbook.Workbook || !this.workbook.Workbook.Names) {\n            return;\n        }\n        this.workbook.Workbook.Names.forEach(item => {\n            let val = this.getRef(item.Ref);\n            this.variables[item.Name] = val;\n            this.expressions.forEach(exp => {\n                this.setVarOfExpression(exp, item.Name);\n            });\n        });\n    }\n    \n    getRef(ref_name) {\n        if (!this.formulas.length) {\n            throw new Error(\"No formula found.\");\n        }\n        let first_formula = this.formulas[0];\n        let formula_ref = first_formula.formula_ref;\n        let formula = {\n            formula_ref: formula_ref,\n            wb: this.workbook,\n            exec_formula: this.exec_formula\n        };\n        return str_2_val(ref_name, formula);\n    }\n    \n    setVarOfExpression(exp, var_name, value) {\n        for (let i = 0; i < exp.args.length; i++) {\n            let arg = exp.args[i];\n            if (arg === var_name) {\n                exp.args[i] = this.variables[var_name] || (this.variables[var_name] = new RawValue(value));\n            } else if (typeof arg === 'object' && (arg.name === 'Expression' || arg.name === 'UserFn')) {\n                this.setVarOfExpression(arg, var_name, value);\n            }\n        }\n    }\n    \n    execute() {\n        this.expressions.forEach(exp => {\n            exp.update_cell_value();\n        });\n    }\n}\n\nmodule.exports = Calculator;"],"sourceRoot":""}